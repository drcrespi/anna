---
openapi: 3.0.3
info:
  contact:
    name: Support
    url: https://support.templafy.com/
    email: support@templafy.com
  version: v3
  termsOfService: https://www.templafy.com/templafy-saas-agreement/
  title: Templafy Public API
  description: Please refer to our [documentation](https://support.templafy.com/hc/en-us/articles/4411351240081-Public-API-Hive-)
    for guidelines and examples.
servers:
- variables:
    tenantId:
      description: Your Templafy subdomain, i.e., https://{TenantId}.api.templafy.com
      default: ''
  url: https://{tenantId}.api.templafy.com/v3
paths:
  "/spaces":
    get:
      tags:
      - Spaces
      summary: Lists all existing active spaces.
      description: Returns a list of all active spaces.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Space"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - bearerAuth:
        - spaces.read
  "/libraries/{spaceId}/documents/assets/{assetId}/generate":
    post:
      tags:
      - Documents
      summary: Generates a document from a template and returns information about
        the file, which includes the download url.
      description: Creates a file from the template in a docx format. The file will
        have bindings replaced using various data sources. The url will only be valid
        for a short amount of time.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the document template
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GenerateFileRequest"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneratedFile"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.generate
  "/libraries/{spaceId}/documents/folders/{folderId}/assets":
    get:
      tags:
      - Documents
      summary: Lists all document templates in the folder.
      description: The result does not include document templates from subfolders.
        When {searchQuery} is used the result includes document templates from subfolders.
        The search mode enables pagination with 1000 page size maximum.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      - name: searchQuery
        in: query
        description: Filter on template name, description and tags
        schema:
          type: string
      - name: pageNumber
        in: query
        description: Page number from the result set. Page number is set to 1 by default
          if {searchQuery} is passed. A value passed only for the page number and
          not for the page size is ignored.
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Size of the returned page. If {searchQuery} is not set, not passing
          page size or having it 0 returns all the assets from the folder. Acceptable
          values are 0 to 1000, inclusive.
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Document"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    post:
      tags:
      - Documents
      summary: Uploads the document template.
      description: Only one file can be attached to the request body. The supported
        file format is .DOCX
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - File
              type: object
              properties:
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
                Name:
                  type: string
                  description: The name is inferred from the file name by default.
                    It can be overriden by providing a different value with this field
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
            encoding:
              File:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
      responses:
        '201':
          description: The identifier of the created template
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The upload cannot proceed due to a conflict with the current
            state of the target location. This may occur if a document with the same
            name already exists in this location, or if the folder intended for the
            upload is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/documents/assets/{assetId}":
    get:
      tags:
      - Documents
      summary: Returns the document template by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the document template to retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DocumentDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    patch:
      tags:
      - Documents
      summary: Updates the document template.
      description: Only one file can be attached to the request body. The supported
        file format is .DOCX
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the document template
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FolderId:
                  type: integer
                  description: The identifier of the destination folder
                  format: int64
                Name:
                  type: string
                  description: A new display name of the asset
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
            encoding:
              FolderId:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
              File:
                style: form
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The update operation cannot be completed due to a conflict
            with the current state of the target location. This may occur if a document
            with the same name already exists in the destination, or if the destination
            folder is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
    delete:
      tags:
      - Documents
      summary: Deletes the document template by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the document template to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/email-elements/folders/{folderId}/assets":
    get:
      tags:
      - EmailElements
      summary: Lists all email elements in the folder.
      description: The result does not include email elements from subfolders.When
        {searchQuery} is used the result includes email elements from subfolders.
        The search mode enables pagination with 1000 page size maximum.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      - name: searchQuery
        in: query
        description: Filter on email element name, description and tags
        schema:
          type: string
      - name: pageNumber
        in: query
        description: Page number from the result set. Page number is set to 1 by default
          if {searchQuery} is passed. A value passed only for the page number and
          not for the page size is ignored.
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Size of the returned page. If {searchQuery} is not set, not passing
          page size or having it 0 returns all the assets from the folder. Acceptable
          values are 0 to 1000, inclusive.
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/EmailElement"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    post:
      tags:
      - EmailElements
      summary: Uploads the email element file.
      description: Only one file can be attached to the request body. The supported
        file format is .DOCX
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - File
              type: object
              properties:
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
                Name:
                  type: string
                  description: The name is inferred from the file name by default.
                    It can be overriden by providing a different value with this field
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
            encoding:
              File:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
      responses:
        '201':
          description: The identifier of the created asset
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The upload cannot proceed due to a conflict with the current
            state of the target location. This may occur if an email element with
            the same name already exists in this location, or if the folder intended
            for the upload is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/email-elements/assets/{assetId}":
    get:
      tags:
      - EmailElements
      summary: Returns the email element by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the email element to retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmailElementDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    patch:
      tags:
      - EmailElements
      summary: Updates the email element asset.
      description: Only one file can be attached to the request body. The supported
        file format is .DOCX
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the email element
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FolderId:
                  type: integer
                  description: The identifier of the destination folder
                  format: int64
                Name:
                  type: string
                  description: A new display name of the asset
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
            encoding:
              FolderId:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
              File:
                style: form
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The update operation cannot be completed due to a conflict
            with the current state of the target location. This may occur if an email
            element with the same name already exists in the destination, or if the
            destination folder is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
    delete:
      tags:
      - EmailElements
      summary: Deletes the email element by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the email element to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/{libraryType}/folders/{folderId}":
    get:
      tags:
      - Folders
      summary: Returns the folder by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: libraryType
        in: path
        description: The type of the library you work with
        required: true
        schema:
          "$ref": "#/components/schemas/LibraryType"
      - name: folderId
        in: path
        description: The identifier of the folder to retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FolderDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    patch:
      tags:
      - Folders
      summary: Updates the folder.
      description: The root folder can not be updated.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: libraryType
        in: path
        description: The type of the library you work with
        required: true
        schema:
          "$ref": "#/components/schemas/LibraryType"
      - name: folderId
        in: path
        description: The identifier of the folder to be updated
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/UpdateFolderRequest"
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateFolderRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/UpdateFolderRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UpdateFolderRequest"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The operation cannot be completed due to a conflict with the
            current state of the folder. This may occur if a folder with the provided
            name already exists, or if the destination folder is in the process of
            being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
    delete:
      tags:
      - Folders
      summary: Deletes the folder by the identifier
      description: The root folder of the library can not be deleted.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: libraryType
        in: path
        description: The type of the library you work with
        required: true
        schema:
          "$ref": "#/components/schemas/LibraryType"
      - name: folderId
        in: path
        description: The identifier of the folder to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The root folder can not be deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/{libraryType}/folders/{folderId}/folders":
    get:
      tags:
      - Folders
      summary: Lists all direct folders in the folder. The result does not include
        subfolders.
      description: The folders from the library can be retrieved by using the root
        folder identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: libraryType
        in: path
        description: The type of the library you work with
        required: true
        schema:
          "$ref": "#/components/schemas/LibraryType"
      - name: folderId
        in: path
        description: The identifier of the folder which children should be retrieved
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Folder"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    post:
      tags:
      - Folders
      summary: Creates a folder inside the specified folder.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: libraryType
        in: path
        description: The type of the library you work with
        required: true
        schema:
          "$ref": "#/components/schemas/LibraryType"
      - name: folderId
        in: path
        description: The identifier of the parent folder in which a new folder is
          created
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/CreateFolderRequest"
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateFolderRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/CreateFolderRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CreateFolderRequest"
      responses:
        '201':
          description: The identifier of the created folder
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The operation cannot be completed due to a conflict with the
            current state of the folder. This may occur if a folder with the provided
            name already exists, or if the parent folder is in the process of being
            deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/images/folders/{folderId}/assets":
    get:
      tags:
      - Images
      summary: Lists all image assets in the folder.
      description: The result does not include images from subfolders. When {searchQuery}
        is used the result includes images from subfolders. The search mode enables
        pagination with 1000 page size maximum.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      - name: searchQuery
        in: query
        description: Filter on image name, description, tags and automatic tags
        schema:
          type: string
      - name: pageNumber
        in: query
        description: Page number from the result set. Page number is set to 1 by default
          if {searchQuery} is passed. A value passed only for the page number and
          not for the page size is ignored.
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Size of the returned page. If {searchQuery} is not set, not passing
          page size or having it 0 returns all the assets from the folder. Acceptable
          values are 0 to 1000, inclusive.
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Image"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    post:
      tags:
      - Images
      summary: Uploads the image file.
      description: Only one file can be attached to the request body. The supported
        file formats are .JPG/.JPEG, .PNG, .GIF and .SVG
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - File
              type: object
              properties:
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
                Name:
                  type: string
                  description: The name is inferred from the file name by default.
                    It can be overriden by providing a different value with this field
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
            encoding:
              File:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
      responses:
        '201':
          description: The identifier of the created asset
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The upload cannot proceed due to a conflict with the current
            state of the target location. This may occur if an image with the same
            name already exists in this location, or if the folder intended for the
            upload is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/images/assets/{assetId}":
    get:
      tags:
      - Images
      summary: Returns the image by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the image to retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ImageDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    patch:
      tags:
      - Images
      summary: Updates the image asset.
      description: Only one file can be attached to the request body. The supported
        file formats are .JPG/.JPEG, .PNG, .GIF and .SVG
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the image asset
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                AutomaticTags:
                  type: array
                  items:
                    type: string
                  description: Automatic tags are system-generated tags that can only
                    be removed partially or fully. Adding a new tag or changing the
                    existing ones is not allowed.
                FolderId:
                  type: integer
                  description: The identifier of the destination folder
                  format: int64
                Name:
                  type: string
                  description: A new display name of the asset
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
            encoding:
              AutomaticTags:
                style: form
              FolderId:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
              File:
                style: form
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The update operation cannot be completed due to a conflict
            with the current state of the target location. This may occur if an image
            with the same name already exists in the destination, or if the destination
            folder is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
    delete:
      tags:
      - Images
      summary: Deletes the image by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the image to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries":
    get:
      tags:
      - Libraries
      summary: Lists all libraries from all spaces.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Library"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
  "/libraries/{spaceId}/{libraryType}":
    get:
      tags:
      - Libraries
      summary: Returns the library by the space identifier and library type.
      description: The response has a root folder unique identifier that can be used
        to request the content of the library.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: libraryType
        in: path
        description: Type of the library to return
        required: true
        schema:
          "$ref": "#/components/schemas/LibraryType"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LibraryDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
  "/libraries/{spaceId}/links/folders/{folderId}/assets":
    get:
      tags:
      - Links
      summary: Lists all link assets in the folder.
      description: The result does not include links from subfolders. When {searchQuery}
        is used the result includes links from subfolders. The search mode enables
        pagination with 1000 page size maximum.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      - name: searchQuery
        in: query
        description: Filter on link name, description and tags
        schema:
          type: string
      - name: pageNumber
        in: query
        description: Page number from the result set. Page number is set to 1 by default
          if {searchQuery} is passed. A value passed only for the page number and
          not for the page size is ignored.
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Size of the returned page. If {searchQuery} is not set, not passing
          page size or having it 0 returns all the assets from the folder. Acceptable
          values are 0 to 1000, inclusive.
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Link"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    post:
      tags:
      - Links
      summary: Creates the link asset.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/CreateLinkRequest"
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateLinkRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/CreateLinkRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CreateLinkRequest"
      responses:
        '201':
          description: The identifier of the created asset
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The creation cannot proceed due to a conflict with the current
            state of the target location. This may occur if a link with the same name
            already exists in this location, or if the folder intended for the creation
            is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/links/assets/{assetId}":
    get:
      tags:
      - Links
      summary: Returns the link asset by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the link to retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LinkDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    patch:
      tags:
      - Links
      summary: Updates the link asset.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the link asset
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/UpdateLinkRequest"
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateLinkRequest"
          text/json:
            schema:
              "$ref": "#/components/schemas/UpdateLinkRequest"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/UpdateLinkRequest"
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The update operation cannot be completed due to a conflict
            with the current state of the target location. This may occur if a link
            with the same name already exists in the destination, or if the destination
            folder is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
    delete:
      tags:
      - Links
      summary: Deletes the link by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the link to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/pdfs/folders/{folderId}/assets":
    get:
      tags:
      - Pdfs
      summary: Lists all pdf assets in the folder.
      description: The result does not include pdfs from subfolders. When {searchQuery}
        is used the result includes pdfs from subfolders. The search mode enables
        pagination with 1000 page size maximum.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      - name: searchQuery
        in: query
        description: Filter on pdf name, description and tags
        schema:
          type: string
      - name: pageNumber
        in: query
        description: Page number from the result set. Page number is set to 1 by default
          if {searchQuery} is passed. A value passed only for the page number and
          not for the page size is ignored.
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Size of the returned page. If {searchQuery} is not set, not passing
          page size or having it 0 returns all the assets from the folder. Acceptable
          values are 0 to 1000, inclusive.
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Pdf"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    post:
      tags:
      - Pdfs
      summary: Uploads the pdf file.
      description: Only one file can be attached to the request body. The supported
        file format is .PDF
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - File
              type: object
              properties:
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
                Name:
                  type: string
                  description: The name is inferred from the file name by default.
                    It can be overriden by providing a different value with this field
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
            encoding:
              File:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
      responses:
        '201':
          description: The identifier of the created asset
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The upload cannot proceed due to a conflict with the current
            state of the target location. This may occur if a pdf with the same name
            already exists in this location, or if the folder intended for the upload
            is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/pdfs/assets/{assetId}":
    get:
      tags:
      - Pdfs
      summary: Returns the pdf by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the pdf to retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PdfDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    patch:
      tags:
      - Pdfs
      summary: Updates the pdf asset.
      description: Only one file can be attached to the request body. The supported
        file format is .PDF
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the pdf asset
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FolderId:
                  type: integer
                  description: The identifier of the destination folder
                  format: int64
                Name:
                  type: string
                  description: A new display name of the asset
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
            encoding:
              FolderId:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
              File:
                style: form
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The update operation cannot be completed due to a conflict
            with the current state of the target location. This may occur if a pdf
            with the same name already exists in the destination, or if the destination
            folder is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
    delete:
      tags:
      - Pdfs
      summary: Deletes the pdf by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the pdf to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/presentations/assets/{assetId}/generate":
    post:
      tags:
      - Presentations
      summary: Generates a presentation from a template and returns information about
        the file, which includes the download url.
      description: Creates a file from the template in a pptx format. The file will
        have bindings replaced using various data sources. The url will only be valid
        for a short amount of time.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the presentation template
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GenerateFileRequest"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneratedFile"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.generate
  "/libraries/{spaceId}/presentations/folders/{folderId}/assets":
    get:
      tags:
      - Presentations
      summary: Lists all presentation templates along with their slides in the folder.
      description: The result does not include presentation templates or slides from
        subfolders. When {searchQuery} is used the result includes presentation templates/slides
        from subfolders. The search mode enables pagination with 1000 page size maximum.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      - name: searchQuery
        in: query
        description: Filter on presentation template/slide name, description and tags
        schema:
          type: string
      - name: pageNumber
        in: query
        description: Page number from the result set. Page number is set to 1 by default
          if {searchQuery} is passed. A value passed only for the page number and
          not for the page size is ignored.
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Size of the returned page. If {searchQuery} is not set, not passing
          page size or having it 0 returns all the assets from the folder. Acceptable
          values are 0 to 1000, inclusive.
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                  - "$ref": "#/components/schemas/Presentation"
                  - "$ref": "#/components/schemas/PresentationSlide"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    post:
      tags:
      - Presentations
      summary: Uploads the presentation template.
      description: Only one file can be attached to the request body. The supported
        file format is .PPTX
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - File
              type: object
              properties:
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
                Name:
                  type: string
                  description: The name is inferred from the file name by default.
                    It can be overriden by providing a different value with this field
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
            encoding:
              File:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
      responses:
        '201':
          description: The identifier of the created template
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The upload cannot proceed due to a conflict with the current
            state of the target location. This may occur if a presentation with the
            same name already exists in this location, or if the folder intended for
            the upload is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/presentations/assets/{assetId}":
    get:
      tags:
      - Presentations
      summary: Returns the presentation template or presentation slide by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the presentation template or slide to retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/PresentationDetails"
                - "$ref": "#/components/schemas/PresentationSlideDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    patch:
      tags:
      - Presentations
      summary: Updates the presentation template.
      description: 'Only one file can be attached to the request body. The supported
        file format is .PPTX. Slides are limited to the following properties that
        can be updated: Name, Tags, ExternalData'
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the presentation template or slide
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FolderId:
                  type: integer
                  description: The identifier of the destination folder
                  format: int64
                Name:
                  type: string
                  description: A new display name of the asset
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
            encoding:
              FolderId:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
              File:
                style: form
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The update operation cannot be completed due to a conflict
            with the current state of the target location. This may occur if a presentation
            with the same name already exists in the destination, or if the destination
            folder is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
    delete:
      tags:
      - Presentations
      summary: Deletes the presentation template by the identifier.
      description: Slides can only be deleted along with the presentation.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the presentation to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/slide-elements/folders/{folderId}/assets":
    get:
      tags:
      - SlideElements
      summary: Lists all slide element decks along with slide elements in the folder.
      description: The result does not include slide element decks or slide elements
        from subfolders. When {searchQuery} is used the result includes decks/slide
        elements from subfolders. The search mode enables pagination with 1000 page
        size maximum.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      - name: searchQuery
        in: query
        description: Filter on slide element deck/slide element name, description
          and tags
        schema:
          type: string
      - name: pageNumber
        in: query
        description: Page number from the result set. Page number is set to 1 by default
          if {searchQuery} is passed. A value passed only for the page number and
          not for the page size is ignored.
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Size of the returned page. If {searchQuery} is not set, not passing
          page size or having it 0 returns all the assets from the folder. Acceptable
          values are 0 to 1000, inclusive.
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                  - "$ref": "#/components/schemas/SlideElement"
                  - "$ref": "#/components/schemas/SlideElementDeck"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    post:
      tags:
      - SlideElements
      summary: Uploads the slide element file.
      description: Only one file can be attached to the request body. The supported
        file format is .PPTX
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - File
              type: object
              properties:
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
                Name:
                  type: string
                  description: The name is inferred from the file name by default.
                    It can be overriden by providing a different value with this field
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
            encoding:
              File:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
      responses:
        '201':
          description: The identifier of the created asset
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The upload cannot proceed due to a conflict with the current
            state of the target location. This may occur if a slide element deck with
            the same name already exists in this location, or if the folder intended
            for the upload is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/slide-elements/assets/{assetId}":
    get:
      tags:
      - SlideElements
      summary: Returns the slide element deck or slide element by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the slide element deck or slide element to
          retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/SlideElementDeckDetails"
                - "$ref": "#/components/schemas/SlideElementDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    patch:
      tags:
      - SlideElements
      summary: Updates the slide element asset.
      description: 'Only one file can be attached to the request body. The supported
        file format is .PPTX. Slide elements are limited to the following properties
        that can be updated: Name, Tags, ExternalData'
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the slide element deck or slide element
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FolderId:
                  type: integer
                  description: The identifier of the destination folder
                  format: int64
                Name:
                  type: string
                  description: A new display name of the asset
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
            encoding:
              FolderId:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
              File:
                style: form
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The update operation cannot be completed due to a conflict
            with the current state of the target location. This may occur if a slide
            element with the same name already exists in the destination, or if the
            destination folder is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
    delete:
      tags:
      - SlideElements
      summary: Deletes the slide element deck by the identifier.
      description: Slide elements can only be deleted along with the slide element
        deck.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the slide element deck to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/slides/folders/{folderId}/assets":
    get:
      tags:
      - Slides
      summary: Lists all slide decks along with slides in the folder.
      description: The result does not include slide decks or slides from subfolders.
        When {searchQuery} is used the result includes decks/slides from subfolders.
        The search mode enables pagination with 1000 page size maximum.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      - name: searchQuery
        in: query
        description: Filter on slide deck/slide name, description and tags
        schema:
          type: string
      - name: pageNumber
        in: query
        description: Page number from the result set. Page number is set to 1 by default
          if {searchQuery} is passed. A value passed only for the page number and
          not for the page size is ignored.
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Size of the returned page. If {searchQuery} is not set, not passing
          page size or having it 0 returns all the assets from the folder. Acceptable
          values are 0 to 1000, inclusive.
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                  - "$ref": "#/components/schemas/Slide"
                  - "$ref": "#/components/schemas/SlideDeck"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    post:
      tags:
      - Slides
      summary: Uploads the slide file.
      description: Only one file can be attached to the request body. The supported
        file format is .PPTX
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - File
              type: object
              properties:
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
                Name:
                  type: string
                  description: The name is inferred from the file name by default.
                    It can be overriden by providing a different value with this field
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
            encoding:
              File:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
      responses:
        '201':
          description: The identifier of the created asset
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The upload cannot proceed due to a conflict with the current
            state of the target location. This may occur if a slide deck with the
            same name already exists in this location, or if the folder intended for
            the upload is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/slides/assets/{assetId}":
    get:
      tags:
      - Slides
      summary: Returns the slide deck or slide by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the slide deck or slide to retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                - "$ref": "#/components/schemas/SlideDeckDetails"
                - "$ref": "#/components/schemas/SlideDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    patch:
      tags:
      - Slides
      summary: Updates the slide asset.
      description: 'Only one file can be attached to the request body. The supported
        file format is .PPTX. Slides are limited to the following properties that
        can be updated: Name, Tags, ExternalData'
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the slide deck or slide
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FolderId:
                  type: integer
                  description: The identifier of the destination folder
                  format: int64
                Name:
                  type: string
                  description: A new display name of the asset
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
            encoding:
              FolderId:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
              File:
                style: form
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The update operation cannot be completed due to a conflict
            with the current state of the target location. This may occur if a slide
            with the same name already exists in the destination, or if the destination
            folder is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
    delete:
      tags:
      - Slides
      summary: Deletes the slide deck by the identifier.
      description: Slides can only be deleted along with the slide deck.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the slide deck to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/spreadsheets/assets/{assetId}/generate":
    post:
      tags:
      - Spreadsheets
      summary: Generates a spreadsheet from a template and returns information about
        the file, which includes the download url.
      description: Creates a file from the template in a xlsx format. The file will
        have bindings replaced using various data sources. The url will only be valid
        for a short amount of time.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the spreadsheet template
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GenerateFileRequest"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneratedFile"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.generate
  "/libraries/{spaceId}/spreadsheets/folders/{folderId}/assets":
    get:
      tags:
      - Spreadsheets
      summary: Lists all spreadsheet templates in the folder.
      description: The result does not include spreadsheet templates from subfolders.
        When {searchQuery} is used the result includes spreadsheet templates from
        subfolders. The search mode enables pagination with 1000 page size maximum.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      - name: searchQuery
        in: query
        description: Filter on template name, description and tags
        schema:
          type: string
      - name: pageNumber
        in: query
        description: Page number from the result set. Page number is set to 1 by default
          if {searchQuery} is passed. A value passed only for the page number and
          not for the page size is ignored.
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Size of the returned page. If {searchQuery} is not set, not passing
          page size or having it 0 returns all the assets from the folder. Acceptable
          values are 0 to 1000, inclusive.
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Spreadsheet"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    post:
      tags:
      - Spreadsheets
      summary: Uploads the spreadsheet template.
      description: Only one file can be attached to the request body. The supported
        file formats are .XLSX and .XLSM for macro-enabled spreadsheets.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - File
              type: object
              properties:
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
                Name:
                  type: string
                  description: The name is inferred from the file name by default.
                    It can be overriden by providing a different value with this field
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
            encoding:
              File:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
      responses:
        '201':
          description: The identifier of the created template
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The upload cannot proceed due to a conflict with the current
            state of the target location. This may occur if spreadsheet with the same
            name already exists in this location, or if the folder intended for the
            upload is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/spreadsheets/assets/{assetId}":
    get:
      tags:
      - Spreadsheets
      summary: Returns the spreadsheet template by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the spreadsheet template to retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpreadsheetDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    patch:
      tags:
      - Spreadsheets
      summary: Updates the spreadsheet template.
      description: Only one file can be attached to the request body. The supported
        file formats are .XLSX and .XLSM for macro-enabled spreadsheets.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the spreadsheet template
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FolderId:
                  type: integer
                  description: The identifier of the destination folder
                  format: int64
                Name:
                  type: string
                  description: A new display name of the asset
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
            encoding:
              FolderId:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
              File:
                style: form
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The update operation cannot be completed due to a conflict
            with the current state of the target location. This may occur if a spreadsheet
            with the same name already exists in the destination, or if the destination
            folder is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
    delete:
      tags:
      - Spreadsheets
      summary: Deletes the spreadsheet template by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the spreadsheet template to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/text-elements/assets/{assetId}/generate":
    post:
      tags:
      - TextElements
      summary: Generates a text element from a template and returns information about
        the file, which includes the download url.
      description: Creates a file from the template in a docx format. The file will
        have bindings replaced using various data sources. The url will only be valid
        for a short amount of time.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the text element template
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GenerateTextElementFileRequest"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneratedTextElementFile"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.generate
  "/libraries/{spaceId}/text-elements/folders/{folderId}/assets":
    get:
      tags:
      - TextElements
      summary: Lists all text elements in the folder.
      description: The result does not include text elements from subfolders.When
        {searchQuery} is used the result includes text elements from subfolders. The
        search mode enables pagination with 1000 page size maximum.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      - name: searchQuery
        in: query
        description: Filter on text element name, description and tags
        schema:
          type: string
      - name: pageNumber
        in: query
        description: Page number from the result set. Page number is set to 1 by default
          if {searchQuery} is passed. A value passed only for the page number and
          not for the page size is ignored.
        schema:
          maximum: 65535
          minimum: 1
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Size of the returned page. If {searchQuery} is not set, not passing
          page size or having it 0 returns all the assets from the folder. Acceptable
          values are 0 to 1000, inclusive.
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TextElement"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    post:
      tags:
      - TextElements
      summary: Uploads the text element file.
      description: Only one file can be attached to the request body. The supported
        file format is .DOCX
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: folderId
        in: path
        description: The identifier of the folder
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - File
              type: object
              properties:
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
                Name:
                  type: string
                  description: The name is inferred from the file name by default.
                    It can be overriden by providing a different value with this field
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
            encoding:
              File:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
      responses:
        '201':
          description: The identifier of the created asset
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The upload cannot proceed due to a conflict with the current
            state of the target location. This may occur if a text element with the
            same name already exists in this location, or if the folder intended for
            the upload is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
  "/libraries/{spaceId}/text-elements/assets/{assetId}":
    get:
      tags:
      - TextElements
      summary: Returns the text element by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the text element to retrieve
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TextElementDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.read
        - library.readwrite
    patch:
      tags:
      - TextElements
      summary: Updates the text element asset.
      description: Only one file can be attached to the request body. The supported
        file format is .DOCX
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the text element
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FolderId:
                  type: integer
                  description: The identifier of the destination folder
                  format: int64
                Name:
                  type: string
                  description: A new display name of the asset
                Description:
                  type: string
                  description: Description is used to specify the intended usage of
                    the asset
                Tags:
                  type: array
                  items:
                    type: string
                  description: Tags should describe the content of the asset making
                    it easier for a user to locate it
                ExternalData:
                  type: string
                  description: External data which can be attached for future reference
                File:
                  type: string
                  description: A file to be uploaded. The maximum file size is 50
                    mb
                  format: binary
            encoding:
              FolderId:
                style: form
              Name:
                style: form
              Description:
                style: form
              Tags:
                style: form
              ExternalData:
                style: form
              File:
                style: form
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ValidationProblemDetails"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
        '409':
          description: The update operation cannot be completed due to a conflict
            with the current state of the target location. This may occur if a text
            element with the same name already exists in the destination, or if the
            destination folder is in the process of being deleted.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ConflictProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
    delete:
      tags:
      - TextElements
      summary: Deletes the text element by the identifier.
      parameters:
      - name: spaceId
        in: path
        description: The identifier of the space
        required: true
        schema:
          type: integer
          format: int64
      - name: assetId
        in: path
        description: The identifier of the text element to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundProblemDetails"
      security:
      - bearerAuth:
        - library.readwrite
components:
  schemas:
    Space:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: Unique Space identifier
          format: int64
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Space name
      additionalProperties: false
      example:
        id: 541244332157142140
        name: Global Brand
    AssetFileStateWithPreviews:
      enum:
      - ready
      - processing
      - processingFailed
      - generatingPreviews
      - generatingPreviewsFailed
      - deleting
      type: string
      description: The current state of the asset
    AssetFileStateWithoutPreviews:
      enum:
      - ready
      - processing
      - processingFailed
      - deleting
      type: string
      description: The current state of the asset
    AssetStateWithoutFile:
      enum:
      - ready
      type: string
      description: The current state of the asset
    ConflictProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
        traceId:
          type: string
          nullable: true
      additionalProperties: false
      example:
        title: Conflict
        detail: The request could not be completed due to a conflict with the current
          state of the resource.
        status: 409
        traceId: d61f7ce-cccb-4e5b-8727-3b68a61a0559
    CreateFolderRequest:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Display name
      additionalProperties: false
      description: The request model to create a folder
    CreateLinkRequest:
      required:
      - name
      - url
      type: object
      properties:
        name:
          maxLength: 100
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
          description: Describing intended usage of the asset
          nullable: true
        tags:
          type: array
          items:
            maxLength: 1024
            minLength: 2
            type: string
          description: Tags should describe the content of the asset making it easier
            for a user to locate it
          nullable: true
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        url:
          maxLength: 2048
          type: string
          description: A reference to the web resource. HTTP and HTTPS are supported
      additionalProperties: false
      description: The request model to create a link asset
    Dimensions:
      required:
      - height
      - width
      type: object
      properties:
        height:
          type: integer
          description: Height of the asset in pixels
          format: int32
        width:
          type: integer
          description: Width of the asset in pixels
          format: int32
        aspectRatio:
          type: string
          nullable: true
      additionalProperties: false
      description: Asset dimensions
    Document:
      required:
      - assetState
      - checksum
      - description
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a document.
            E.g. "folder-a/folder-b/_my-document" when the location is "Folder A >
            Folder B > My Document"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
      additionalProperties: false
    DocumentDetails:
      required:
      - assetState
      - checksum
      - description
      - downloadUrl
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        downloadUrl:
          type: string
          description: Generated temporary access URL for content downloading with
            302 response code
          format: uri
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a document.
            E.g. "folder-a/folder-b/_my-document" when the location is "Folder A >
            Folder B > My Document"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
      additionalProperties: false
    EmailElement:
      required:
      - assetState
      - checksum
      - description
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a email
            element. E.g. "folder-a/folder-b/_my-email-element" when the location
            is "Folder A > Folder B > My Email Element"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
      additionalProperties: false
    EmailElementDetails:
      required:
      - assetState
      - checksum
      - description
      - downloadUrl
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        downloadUrl:
          type: string
          description: Generated temporary access URL for content downloading with
            302 response code
          format: uri
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a email
            element. E.g. "folder-a/folder-b/_my-email-element" when the location
            is "Folder A > Folder B > My Email Element"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
      additionalProperties: false
    Folder:
      required:
      - id
      - libraryId
      - modifiedAt
      - name
      - navigationPath
      - state
      type: object
      properties:
        id:
          type: integer
          description: Unique folder identifier
          format: int64
        libraryId:
          type: integer
          description: Unique library identifier
          format: int64
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Display name
        parentId:
          type: integer
          description: Unique identifier for the parent folder. The root folder does
            not have a parent folder identifier
          format: int64
          nullable: true
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a folder.
            E.g. "folder-a/folder-b" when the location is "Folder A > Folder B"
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the folder was last
            modified
        state:
          "$ref": "#/components/schemas/FolderState"
      additionalProperties: false
    FolderDetails:
      required:
      - id
      - libraryId
      - modifiedAt
      - name
      - navigationPath
      - state
      type: object
      properties:
        id:
          type: integer
          description: Unique folder identifier
          format: int64
        libraryId:
          type: integer
          description: Unique library identifier
          format: int64
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Display name
        parentId:
          type: integer
          description: Unique identifier for the parent folder. The root folder does
            not have a parent folder identifier
          format: int64
          nullable: true
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a folder.
            E.g. "folder-a/folder-b" when the location is "Folder A > Folder B"
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the folder was last
            modified
        state:
          "$ref": "#/components/schemas/FolderState"
      additionalProperties: false
    FolderState:
      enum:
      - ready
      - deleting
      type: string
      description: The current state of the folder
    GenerateFileRequest:
      required:
      - email
      type: object
      properties:
        email:
          minLength: 1
          type: string
          description: Email to be used for identification.
          format: email
        data:
          description: Data to be used during the file generation.
          nullable: true
        includePdf:
          type: boolean
          description: Specifies whether a PDF export of the file should be included
            in the response.
      additionalProperties: false
      description: The request model to generate a file.
      example:
        email: templafy@templafy.com
        data:
          Language: en-us
        includePdf: true
    GenerateTextElementFileRequest:
      required:
      - email
      type: object
      properties:
        email:
          minLength: 1
          type: string
          description: Email to be used for identification.
          format: email
        data:
          description: Data to be used during the file generation.
          nullable: true
      additionalProperties: false
      description: The request model to generate a text element file.
      example:
        email: templafy@templafy.com
        data:
          Language: en-us
    GeneratedFile:
      required:
      - checksum
      - downloadUrl
      - fileExtension
      - fileSize
      - mimeType
      type: object
      properties:
        downloadUrl:
          minLength: 1
          type: string
          description: Temporary access URL for generated file.
          format: uri
        fileSize:
          type: integer
          description: File size in bytes.
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes.
        mimeType:
          minLength: 1
          type: string
          description: Mime type of the generated file.
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file.
        pdfDownloadUrl:
          type: string
          description: Temporary access URL for generated PDF file. Only available
            if the file was converted to PDF.
          nullable: true
      additionalProperties: false
      description: The generated file response model.
    GeneratedTextElementFile:
      required:
      - checksum
      - downloadUrl
      - fileExtension
      - fileSize
      - mimeType
      type: object
      properties:
        downloadUrl:
          minLength: 1
          type: string
          description: Temporary access URL for generated file.
          format: uri
        fileSize:
          type: integer
          description: File size in bytes.
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes.
        mimeType:
          minLength: 1
          type: string
          description: Mime type of the generated file.
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file.
      additionalProperties: false
      description: The generated text element file response model.
    Image:
      required:
      - assetState
      - automaticTags
      - checksum
      - description
      - dimensions
      - fileExtension
      - fileSize
      - folderId
      - id
      - mimeType
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        smallPreviewLink:
          type: string
          description: Link to the image with the maximum width 400px
          nullable: true
        largePreviewLink:
          type: string
          description: Link to the image with the maximum width 1500px
          nullable: true
        dimensions:
          "$ref": "#/components/schemas/Dimensions"
        mimeType:
          minLength: 1
          type: string
        automaticTags:
          type: array
          items:
            type: string
          description: Tags that are automatically generated based on the image
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of an
            image. E.g. "folder-a/folder-b/_my-image" when the location is "Folder
            A > Folder B > My Image"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithPreviews"
      additionalProperties: false
    ImageDetails:
      required:
      - assetState
      - automaticTags
      - checksum
      - description
      - dimensions
      - downloadUrl
      - fileExtension
      - fileSize
      - folderId
      - id
      - mimeType
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        smallPreviewLink:
          type: string
          description: Link to the image with the maximum width 400px
          nullable: true
        largePreviewLink:
          type: string
          description: Link to the image with the maximum width 1500px
          nullable: true
        dimensions:
          "$ref": "#/components/schemas/Dimensions"
        mimeType:
          minLength: 1
          type: string
        automaticTags:
          type: array
          items:
            type: string
          description: Tags that are automatically generated based on the image
        downloadUrl:
          type: string
          description: Generated temporary access URL for content downloading with
            302 response code
          format: uri
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of an
            image. E.g. "folder-a/folder-b/_my-image" when the location is "Folder
            A > Folder B > My Image"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithPreviews"
      additionalProperties: false
    Library:
      required:
      - id
      - libraryType
      - name
      - rootFolderId
      - spaceId
      type: object
      properties:
        id:
          type: integer
          description: Unique library identifier
          format: int64
        name:
          maxLength: 25
          minLength: 1
          type: string
          description: Display name of the library
        libraryType:
          "$ref": "#/components/schemas/LibraryType"
        spaceId:
          type: integer
          description: Unique identifier of the space to which the library belongs
          format: int64
        rootFolderId:
          type: integer
          description: Unique identifier of the root folder of the library
          format: int64
      additionalProperties: false
    LibraryDetails:
      required:
      - id
      - libraryType
      - name
      - rootFolderId
      - spaceId
      type: object
      properties:
        id:
          type: integer
          description: Unique library identifier
          format: int64
        name:
          maxLength: 25
          minLength: 1
          type: string
          description: Display name of the library
        libraryType:
          "$ref": "#/components/schemas/LibraryType"
        spaceId:
          type: integer
          description: Unique identifier of the space to which the library belongs
          format: int64
        rootFolderId:
          type: integer
          description: Unique identifier of the root folder of the library
          format: int64
      additionalProperties: false
    LibraryType:
      enum:
      - documents
      - presentations
      - spreadsheets
      - slides
      - slide-elements
      - text-elements
      - images
      - pdfs
      - links
      - email-elements
      type: string
      description: Type of the assets that can be stored in the library
    Link:
      required:
      - assetState
      - description
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      - url
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        url:
          maxLength: 2048
          minLength: 1
          type: string
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a link.
            E.g. "folder-a/folder-b/_my-link" when the location is "Folder A > Folder
            B > My Link"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetStateWithoutFile"
      additionalProperties: false
    LinkDetails:
      required:
      - assetState
      - description
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      - url
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        url:
          maxLength: 2048
          minLength: 1
          type: string
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a link.
            E.g. "folder-a/folder-b/_my-link" when the location is "Folder A > Folder
            B > My Link"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetStateWithoutFile"
      additionalProperties: false
    NotFoundProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
        traceId:
          type: string
          nullable: true
      additionalProperties: false
      example:
        title: NotFound
        detail: The server can not find the requested resource.
        status: 404
        traceId: d61f7ce-cccb-4e5b-8727-3b68a61a0559
    Pdf:
      required:
      - assetState
      - checksum
      - description
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a pdf.
            E.g. "folder-a/folder-b/_my-pdf" when the location is "Folder A > Folder
            B > My Pdf"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
      additionalProperties: false
    PdfDetails:
      required:
      - assetState
      - checksum
      - description
      - downloadUrl
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        downloadUrl:
          type: string
          description: Generated temporary access URL for content downloading with
            302 response code
          format: uri
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a pdf.
            E.g. "folder-a/folder-b/_my-pdf" when the location is "Folder A > Folder
            B > My Pdf"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
      additionalProperties: false
    Presentation:
      required:
      - assetType
      - description
      type: object
      allOf:
      - "$ref": "#/components/schemas/PresentationBase"
      properties:
        assetType:
          minLength: 1
          type: string
          description: Type of the asset. It is always Presentation for this schema
        description:
          maxLength: 250
          type: string
      additionalProperties: false
    PresentationBase:
      required:
      - assetState
      - assetType
      - checksum
      - dimensions
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        assetType:
          minLength: 1
          type: string
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithPreviews"
        dimensions:
          "$ref": "#/components/schemas/Dimensions"
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a presentation.
            E.g. "folder-a/folder-b/_my-presentation" when the location is "Folder
            A > Folder B > My Presentation"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        smallPreviewLink:
          type: string
          description: Link to the asset with the maximum width 400px
          nullable: true
        largePreviewLink:
          type: string
          description: Link to the asset with the maximum width 1500px
          nullable: true
      additionalProperties: false
    PresentationDetails:
      required:
      - assetType
      - childrenAssetIds
      - description
      - downloadUrl
      type: object
      allOf:
      - "$ref": "#/components/schemas/PresentationDetailsBase"
      properties:
        assetType:
          minLength: 1
          type: string
          description: Type of the asset. It is always Presentation for this schema
        childrenAssetIds:
          type: array
          items:
            type: integer
            format: int64
          description: The array of the identifiers of slides included in the presentation
        description:
          maxLength: 250
          type: string
        downloadUrl:
          type: string
          description: Generated temporary access URL for content downloading with
            302 response code
          format: uri
      additionalProperties: false
    PresentationDetailsBase:
      required:
      - assetState
      - assetType
      - checksum
      - dimensions
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        assetType:
          minLength: 1
          type: string
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithPreviews"
        dimensions:
          "$ref": "#/components/schemas/Dimensions"
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a presentation.
            E.g. "folder-a/folder-b/_my-presentation" when the location is "Folder
            A > Folder B > My Presentation"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        smallPreviewLink:
          type: string
          description: Link to the asset with the maximum width 400px
          nullable: true
        largePreviewLink:
          type: string
          description: Link to the asset with the maximum width 1500px
          nullable: true
      additionalProperties: false
    PresentationSlide:
      required:
      - assetType
      - presentationId
      type: object
      allOf:
      - "$ref": "#/components/schemas/PresentationBase"
      properties:
        assetType:
          minLength: 1
          type: string
          description: Type of the asset. It is always Slide for this schema
        presentationId:
          type: integer
          description: The identifier of the presentation to which a slide belongs
          format: int64
      additionalProperties: false
    PresentationSlideDetails:
      required:
      - assetType
      - presentationId
      type: object
      allOf:
      - "$ref": "#/components/schemas/PresentationDetailsBase"
      properties:
        assetType:
          minLength: 1
          type: string
          description: Type of the asset. It is always Slide for this schema
        presentationId:
          type: integer
          description: The identifier of the presentation to which a slide belongs
          format: int64
      additionalProperties: false
    Slide:
      required:
      - assetType
      - slideDeckId
      type: object
      allOf:
      - "$ref": "#/components/schemas/SlideBase"
      properties:
        assetType:
          minLength: 1
          type: string
          description: Type of the asset. It is always Slide for this schema
        slideDeckId:
          type: integer
          description: The identifier of the slide deck to which a slide belongs
          format: int64
      additionalProperties: false
    SlideBase:
      required:
      - assetState
      - assetType
      - checksum
      - dimensions
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        assetType:
          minLength: 1
          type: string
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithPreviews"
        dimensions:
          "$ref": "#/components/schemas/Dimensions"
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a slide.
            E.g. "folder-a/folder-b/_my-slide" when the location is "Folder A > Folder
            B > My Slide"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        smallPreviewLink:
          type: string
          description: Link to the asset with the maximum width 400px
          nullable: true
        largePreviewLink:
          type: string
          description: Link to the asset with the maximum width 1500px
          nullable: true
      additionalProperties: false
    SlideDeck:
      required:
      - assetType
      - description
      type: object
      allOf:
      - "$ref": "#/components/schemas/SlideBase"
      properties:
        assetType:
          minLength: 1
          type: string
          description: Type of the asset. It is always SlideDeck for this schema
        description:
          maxLength: 250
          type: string
      additionalProperties: false
    SlideDeckDetails:
      required:
      - assetType
      - childrenAssetIds
      - description
      - downloadUrl
      type: object
      allOf:
      - "$ref": "#/components/schemas/SlideDetailsBase"
      properties:
        assetType:
          minLength: 1
          type: string
          description: Type of the asset. It is always SlideDeck for this schema
        childrenAssetIds:
          type: array
          items:
            type: integer
            format: int64
          description: The array of the identifiers of slides included in the slide
            deck
        description:
          maxLength: 250
          type: string
        downloadUrl:
          type: string
          description: Generated temporary access URL for content downloading with
            302 response code
          format: uri
      additionalProperties: false
    SlideDetails:
      required:
      - assetType
      - slideDeckId
      type: object
      allOf:
      - "$ref": "#/components/schemas/SlideDetailsBase"
      properties:
        assetType:
          minLength: 1
          type: string
          description: Type of the asset. It is always Slide for this schema
        slideDeckId:
          type: integer
          description: The identifier of the slide deck to which a slide belongs
          format: int64
      additionalProperties: false
    SlideDetailsBase:
      required:
      - assetState
      - assetType
      - checksum
      - dimensions
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        assetType:
          minLength: 1
          type: string
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithPreviews"
        dimensions:
          "$ref": "#/components/schemas/Dimensions"
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a slide.
            E.g. "folder-a/folder-b/_my-slide" when the location is "Folder A > Folder
            B > My Slide"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        smallPreviewLink:
          type: string
          description: Link to the asset with the maximum width 400px
          nullable: true
        largePreviewLink:
          type: string
          description: Link to the asset with the maximum width 1500px
          nullable: true
      additionalProperties: false
    SlideElement:
      required:
      - assetType
      - slideElementDeckId
      type: object
      allOf:
      - "$ref": "#/components/schemas/SlideElementBase"
      properties:
        assetType:
          minLength: 1
          type: string
          description: Type of the asset. It is always SlideElement for this schema
        slideElementDeckId:
          type: integer
          description: The identifier of the slide element deck to which a slide element
            belongs
          format: int64
      additionalProperties: false
    SlideElementBase:
      required:
      - assetState
      - assetType
      - checksum
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        assetType:
          minLength: 1
          type: string
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithPreviews"
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a slide
            element. E.g. "folder-a/folder-b/_my-slide-element" when the location
            is "Folder A > Folder B > My Slide Element"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        smallPreviewLink:
          type: string
          description: Link to the asset with the maximum width 400px
          nullable: true
        largePreviewLink:
          type: string
          description: Link to the asset with the maximum width 1500px
          nullable: true
      additionalProperties: false
    SlideElementDeck:
      required:
      - assetType
      - description
      type: object
      allOf:
      - "$ref": "#/components/schemas/SlideElementBase"
      properties:
        assetType:
          minLength: 1
          type: string
          description: Type of the asset. It is always SlideElementDeck for this schema
        description:
          maxLength: 250
          type: string
      additionalProperties: false
    SlideElementDeckDetails:
      required:
      - assetType
      - childrenAssetIds
      - description
      - downloadUrl
      type: object
      allOf:
      - "$ref": "#/components/schemas/SlideElementDetailsBase"
      properties:
        assetType:
          minLength: 1
          type: string
          description: Type of the asset. It is always SlideElementDeck for this schema
        childrenAssetIds:
          type: array
          items:
            type: integer
            format: int64
          description: The array of the identifiers of slide elements included in
            the slide element deck
        description:
          maxLength: 250
          type: string
        downloadUrl:
          type: string
          description: Generated temporary access URL for content downloading with
            302 response code
          format: uri
      additionalProperties: false
    SlideElementDetails:
      required:
      - assetType
      - slideElementDeckId
      type: object
      allOf:
      - "$ref": "#/components/schemas/SlideElementDetailsBase"
      properties:
        assetType:
          minLength: 1
          type: string
          description: Type of the asset. It is always SlideElement for this schema
        slideElementDeckId:
          type: integer
          description: The identifier of the slide element deck to which a slide element
            belongs
          format: int64
      additionalProperties: false
    SlideElementDetailsBase:
      required:
      - assetState
      - assetType
      - checksum
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        assetType:
          minLength: 1
          type: string
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithPreviews"
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a slide
            element. E.g. "folder-a/folder-b/_my-slide-element" when the location
            is "Folder A > Folder B > My Slide Element"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        smallPreviewLink:
          type: string
          description: Link to the asset with the maximum width 400px
          nullable: true
        largePreviewLink:
          type: string
          description: Link to the asset with the maximum width 1500px
          nullable: true
      additionalProperties: false
    Spreadsheet:
      required:
      - assetState
      - checksum
      - description
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a spreadsheet.
            E.g. "folder-a/folder-b/_my-spreadsheet" when the location is "Folder
            A > Folder B > My Spreadsheet"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
      additionalProperties: false
    SpreadsheetDetails:
      required:
      - assetState
      - checksum
      - description
      - downloadUrl
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        downloadUrl:
          type: string
          description: Generated temporary access URL for content downloading with
            302 response code
          format: uri
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a spreadsheet.
            E.g. "folder-a/folder-b/_my-spreadsheet" when the location is "Folder
            A > Folder B > My Spreadsheet"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
      additionalProperties: false
    TextElement:
      required:
      - assetState
      - checksum
      - description
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a text
            element. E.g. "folder-a/folder-b/_my-text-element" when the location is
            "Folder A > Folder B > My Text Element"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
      additionalProperties: false
    TextElementDetails:
      required:
      - assetState
      - checksum
      - description
      - downloadUrl
      - fileExtension
      - fileSize
      - folderId
      - id
      - modifiedAt
      - name
      - navigationPath
      - tags
      type: object
      properties:
        id:
          type: integer
          description: Unique asset identifier
          format: int64
        folderId:
          type: integer
          description: Unique folder identifier
          format: int64
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: Display name
        description:
          maxLength: 250
          type: string
        tags:
          type: array
          items:
            type: string
        fileSize:
          type: integer
          description: File size in bytes
          format: int64
        checksum:
          minLength: 1
          type: string
          description: MD5 checksum of the bytes
        fileExtension:
          minLength: 1
          type: string
          description: Suffix to the name of the file
        downloadUrl:
          type: string
          description: Generated temporary access URL for content downloading with
            302 response code
          format: uri
        navigationPath:
          maxLength: 700
          minLength: 1
          type: string
          description: Hierarchical path in lowercase based on the location of a text
            element. E.g. "folder-a/folder-b/_my-text-element" when the location is
            "Folder A > Folder B > My Text Element"
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
        modifiedAt:
          minLength: 1
          type: string
          description: Date and time in ISO 8601 format of when the asset was last
            modified
        assetState:
          "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
      additionalProperties: false
    UpdateFolderRequest:
      type: object
      properties:
        name:
          maxLength: 50
          type: string
          description: Display name
          nullable: true
        parentFolderId:
          type: integer
          description: The identifier of a folder that current folder should be moved
            to
          format: int64
          nullable: true
      additionalProperties: false
      description: The request model to update the folder
    UpdateLinkRequest:
      type: object
      properties:
        folderId:
          type: integer
          description: The identifier of the destination folder
          format: int64
          nullable: true
        name:
          maxLength: 100
          type: string
          description: A new display name of the asset
          nullable: true
        description:
          maxLength: 250
          type: string
          description: Description is used to specify the intended usage of the asset
          nullable: true
        tags:
          type: array
          items:
            maxLength: 1024
            minLength: 2
            type: string
          description: Tags should describe the content of the asset making it easier
            for a user to locate it
          nullable: true
        url:
          maxLength: 2048
          type: string
          description: A reference to the web resource. HTTP and HTTPS are supported
          nullable: true
        externalData:
          maxLength: 100
          type: string
          description: External data which can be attached for future reference
          nullable: true
      additionalProperties: false
    ValidationProblemDetails:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
        traceId:
          type: string
          nullable: true
      additionalProperties: false
      example:
        errors:
        - name: The name field is required
        - data: The input was invalid
        title: One or more validation errors occurred.
        status: 400
        traceId: d61f7ce-cccb-4e5b-8727-3b68a61a0559

    ColorThemeFieldSchema:
      allOf:
      - "$ref": "#/components/schemas/DataSourceFieldSchema"
      - type: object
        additionalProperties: false
      example:
        id: 6
        name: PreferredColourTheme
        type: colorTheme
        isRequired: false
        isLocked: false
    DataSource:
      required:
      - fields
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          description: Unique data source identifier.
          format: int64
        name:
          minLength: 1
          type: string
          description: Data source name. It must be unique.
        description:
          type: string
          description: Data source description.
          nullable: true
        fields:
          type: array
          items:
            oneOf:
            - "$ref": "#/components/schemas/TextFieldSchema"
            - "$ref": "#/components/schemas/NumberFieldSchema"
            - "$ref": "#/components/schemas/ReferenceFieldSchema"
            - "$ref": "#/components/schemas/ImageFieldSchema"
            - "$ref": "#/components/schemas/LanguageFieldSchema"
            - "$ref": "#/components/schemas/FontFieldSchema"
            - "$ref": "#/components/schemas/ColorThemeFieldSchema"
      additionalProperties: false
      example:
        id: '638247997499047080'
        name: Cities
        description: Cities in which we have offices
        fields:
        - id: 0
          name: Name
          type: text
          isRequired: true
          isLocked: true
          isMultipleLines: false
        - id: 1
          name: History
          type: text
          isRequired: false
          isLocked: false
          isMultipleLines: true
          defaultValue: The city was established in the year 1652 by Dutch explorers...
        - id: 2
          name: Population
          type: number
          isRequired: true
          isLocked: false
          defaultValue: 100222
        - id: 3
          name: Country
          type: reference
          isRequired: true
          isLocked: false
          defaultValue: '638247997437572266'
          referenceDataSourceId: '638247997437572264'
        - id: 4
          name: Flag
          type: image
          isRequired: false
          isLocked: false
        - id: 5
          name: PreferredLanguage
          type: language
          isRequired: false
          isLocked: false
          defaultValue: German
        - id: 6
          name: PreferredFont
          type: font
          isRequired: false
          isLocked: false
        - id: 7
          name: PreferredColourTheme
          type: colorTheme
          isRequired: false
          isLocked: false


    FontFieldSchema:
      allOf:
      - "$ref": "#/components/schemas/DataSourceFieldSchema"
      - type: object
        additionalProperties: false
      example:
        id: 5
        name: PreferredFont
        type: font
        isRequired: false
        isLocked: false
    ImageFieldSchema:
      allOf:
      - "$ref": "#/components/schemas/DataSourceFieldSchema"
      - type: object
        additionalProperties: false
      example:
        id: 2
        name: Logo
        type: image
        isRequired: false
        isLocked: false
    LanguageFieldSchema:
      allOf:
      - "$ref": "#/components/schemas/DataSourceFieldSchema"
      - type: object
        properties:
          defaultValue:
            type: string
            description: The default value of the field. If specified, the field will
              be pre-filled with this value when creating a data source item.
            nullable: true
        additionalProperties: false
      example:
        id: 4
        name: PreferredLanguage
        type: language
        isRequired: false
        isLocked: false
        defaultValue: German
    NumberFieldSchema:
      allOf:
      - "$ref": "#/components/schemas/DataSourceFieldSchema"
      - type: object
        properties:
          defaultValue:
            type: number
            description: The default value of the field. If specified, the field will
              be pre-filled with this value when creating a data source item.
            format: double
            nullable: true
        additionalProperties: false
      example:
        id: 1
        name: NumberOfOffices
        type: number
        isRequired: true
        isLocked: false
        defaultValue: 1
    ReferenceFieldSchema:
      allOf:
      - "$ref": "#/components/schemas/DataSourceFieldSchema"
      - required:
        - referenceDataSourceId
        type: object
        properties:
          referenceDataSourceId:
            type: integer
            description: The id of the data source that the field references.
            format: int64
          defaultValue:
            type: integer
            description: The default value of the field. If specified, the field will
              be pre-filled with this value when creating a data source item.
            format: int64
            nullable: true
        additionalProperties: false
      example:
        id: 3
        name: Region
        type: reference
        isRequired: true
        isLocked: false
        defaultValue: '638247997437572266'
        referenceDataSourceId: '638247997437572264'
    TextFieldSchema:
      allOf:
      - "$ref": "#/components/schemas/DataSourceFieldSchema"
      - required:
        - isMultipleLines
        type: object
        properties:
          isMultipleLines:
            type: boolean
            description: Whether the field is multiple lines. If true, the field will
              be rendered as a text area.
          defaultValue:
            type: string
            description: The default value of the field. If specified, the field will
              be pre-filled with this value when creating a data source item.
            nullable: true
        additionalProperties: false
      example:
        id: 1
        name: History
        type: text
        isRequired: true
        isLocked: false
        isMultipleLines: false
        defaultValue: The city was established in the year 1652 by Dutch explorers...

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key
