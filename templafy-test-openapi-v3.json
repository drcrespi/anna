{
  "openapi": "3.0.3",
  "info": {
    "contact": {
      "name": "Support",
      "url": "https://support.templafy.com/",
      "email": "support@templafy.com"
    },
    "version": "v3",
    "termsOfService": "https://www.templafy.com/templafy-saas-agreement/",
    "title": "Templafy Public API",
    "description": "Please refer to our [documentation](https://support.templafy.com/hc/en-us/articles/4411351240081-Public-API-Hive-) for guidelines and examples."
  },
  "servers": [
    {
      "variables": {
        "tenantId": {
          "description": "Your Templafy subdomain, i.e., https://{TenantId}.api.templafy.com",
          "default": ""
        }
      },
      "url": "https://{tenantId}.api.templafy.com/v3"
    }
  ],
  "paths": {
    "/spaces": {
      "get": {
        "tags": [
          "Spaces"
        ],
        "summary": "Lists all existing active spaces.",
        "description": "Returns a list of all active spaces.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Space"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "spaces.read"
            ]
          }
        ]
      }
    },
    "/libraries/{spaceId}/documents/assets/{assetId}/generate": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Generates a document from a template and returns information about the file, which includes the download url.",
        "description": "Creates a file from the template in a docx format. The file will have bindings replaced using various data sources. The url will only be valid for a short amount of time.",
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "The identifier of the space",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "assetId",
            "in": "path",
            "description": "The identifier of the document template",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateFileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedFile"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [
              "library.generate"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Space": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique Space identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Space name"
          }
        },
        "additionalProperties": false,
        "example": {
          "id": 541244332157142140,
          "name": "Global Brand"
        }
      },
      "AssetFileStateWithPreviews": {
        "enum": [
          "ready",
          "processing",
          "processingFailed",
          "generatingPreviews",
          "generatingPreviewsFailed",
          "deleting"
        ],
        "type": "string",
        "description": "The current state of the asset"
      },
      "AssetFileStateWithoutPreviews": {
        "enum": [
          "ready",
          "processing",
          "processingFailed",
          "deleting"
        ],
        "type": "string",
        "description": "The current state of the asset"
      },
      "AssetStateWithoutFile": {
        "enum": [
          "ready"
        ],
        "type": "string",
        "description": "The current state of the asset"
      },
      "ConflictProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "example": {
          "title": "Conflict",
          "detail": "The request could not be completed due to a conflict with the current state of the resource.",
          "status": 409,
          "traceId": "d61f7ce-cccb-4e5b-8727-3b68a61a0559"
        }
      },
      "CreateFolderRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          }
        },
        "additionalProperties": false,
        "description": "The request model to create a folder"
      },
      "CreateLinkRequest": {
        "required": [
          "name",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string",
            "description": "Describing intended usage of the asset",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "maxLength": 1024,
              "minLength": 2,
              "type": "string"
            },
            "description": "Tags should describe the content of the asset making it easier for a user to locate it",
            "nullable": true
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "url": {
            "maxLength": 2048,
            "type": "string",
            "description": "A reference to the web resource. HTTP and HTTPS are supported"
          }
        },
        "additionalProperties": false,
        "description": "The request model to create a link asset"
      },
      "Dimensions": {
        "required": [
          "height",
          "width"
        ],
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "Height of the asset in pixels",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "Width of the asset in pixels",
            "format": "int32"
          },
          "aspectRatio": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Asset dimensions"
      },
      "Document": {
        "required": [
          "assetState",
          "checksum",
          "description",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a document. E.g. \"folder-a/folder-b/_my-document\" when the location is \"Folder A > Folder B > My Document\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
          }
        },
        "additionalProperties": false
      },
      "DocumentDetails": {
        "required": [
          "assetState",
          "checksum",
          "description",
          "downloadUrl",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "downloadUrl": {
            "type": "string",
            "description": "Generated temporary access URL for content downloading with 302 response code",
            "format": "uri"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a document. E.g. \"folder-a/folder-b/_my-document\" when the location is \"Folder A > Folder B > My Document\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
          }
        },
        "additionalProperties": false
      },
      "EmailElement": {
        "required": [
          "assetState",
          "checksum",
          "description",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a email element. E.g. \"folder-a/folder-b/_my-email-element\" when the location is \"Folder A > Folder B > My Email Element\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
          }
        },
        "additionalProperties": false
      },
      "EmailElementDetails": {
        "required": [
          "assetState",
          "checksum",
          "description",
          "downloadUrl",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "downloadUrl": {
            "type": "string",
            "description": "Generated temporary access URL for content downloading with 302 response code",
            "format": "uri"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a email element. E.g. \"folder-a/folder-b/_my-email-element\" when the location is \"Folder A > Folder B > My Email Element\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
          }
        },
        "additionalProperties": false
      },
      "Folder": {
        "required": [
          "id",
          "libraryId",
          "modifiedAt",
          "name",
          "navigationPath",
          "state"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "libraryId": {
            "type": "integer",
            "description": "Unique library identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "parentId": {
            "type": "integer",
            "description": "Unique identifier for the parent folder. The root folder does not have a parent folder identifier",
            "format": "int64",
            "nullable": true
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a folder. E.g. \"folder-a/folder-b\" when the location is \"Folder A > Folder B\""
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the folder was last modified"
          },
          "state": {
            "$ref": "#/components/schemas/FolderState"
          }
        },
        "additionalProperties": false
      },
      "FolderDetails": {
        "required": [
          "id",
          "libraryId",
          "modifiedAt",
          "name",
          "navigationPath",
          "state"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "libraryId": {
            "type": "integer",
            "description": "Unique library identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "parentId": {
            "type": "integer",
            "description": "Unique identifier for the parent folder. The root folder does not have a parent folder identifier",
            "format": "int64",
            "nullable": true
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a folder. E.g. \"folder-a/folder-b\" when the location is \"Folder A > Folder B\""
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the folder was last modified"
          },
          "state": {
            "$ref": "#/components/schemas/FolderState"
          }
        },
        "additionalProperties": false
      },
      "FolderState": {
        "enum": [
          "ready",
          "deleting"
        ],
        "type": "string",
        "description": "The current state of the folder"
      },
      "GenerateFileRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Email to be used for identification.",
            "format": "email"
          },
          "data": {
            "description": "Data to be used during the file generation.",
            "nullable": true
          },
          "includePdf": {
            "type": "boolean",
            "description": "Specifies whether a PDF export of the file should be included in the response."
          }
        },
        "additionalProperties": false,
        "description": "The request model to generate a file.",
        "example": {
          "email": "templafy@templafy.com",
          "data": {
            "Language": "en-us"
          },
          "includePdf": true
        }
      },
      "GenerateTextElementFileRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Email to be used for identification.",
            "format": "email"
          },
          "data": {
            "description": "Data to be used during the file generation.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The request model to generate a text element file.",
        "example": {
          "email": "templafy@templafy.com",
          "data": {
            "Language": "en-us"
          }
        }
      },
      "GeneratedFile": {
        "required": [
          "checksum",
          "downloadUrl",
          "fileExtension",
          "fileSize",
          "mimeType"
        ],
        "type": "object",
        "properties": {
          "downloadUrl": {
            "minLength": 1,
            "type": "string",
            "description": "Temporary access URL for generated file.",
            "format": "uri"
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes.",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes."
          },
          "mimeType": {
            "minLength": 1,
            "type": "string",
            "description": "Mime type of the generated file."
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file."
          },
          "pdfDownloadUrl": {
            "type": "string",
            "description": "Temporary access URL for generated PDF file. Only available if the file was converted to PDF.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The generated file response model."
      },
      "GeneratedTextElementFile": {
        "required": [
          "checksum",
          "downloadUrl",
          "fileExtension",
          "fileSize",
          "mimeType"
        ],
        "type": "object",
        "properties": {
          "downloadUrl": {
            "minLength": 1,
            "type": "string",
            "description": "Temporary access URL for generated file.",
            "format": "uri"
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes.",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes."
          },
          "mimeType": {
            "minLength": 1,
            "type": "string",
            "description": "Mime type of the generated file."
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file."
          }
        },
        "additionalProperties": false,
        "description": "The generated text element file response model."
      },
      "Image": {
        "required": [
          "assetState",
          "automaticTags",
          "checksum",
          "description",
          "dimensions",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "mimeType",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "smallPreviewLink": {
            "type": "string",
            "description": "Link to the image with the maximum width 400px",
            "nullable": true
          },
          "largePreviewLink": {
            "type": "string",
            "description": "Link to the image with the maximum width 1500px",
            "nullable": true
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "mimeType": {
            "minLength": 1,
            "type": "string"
          },
          "automaticTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags that are automatically generated based on the image"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of an image. E.g. \"folder-a/folder-b/_my-image\" when the location is \"Folder A > Folder B > My Image\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithPreviews"
          }
        },
        "additionalProperties": false
      },
      "ImageDetails": {
        "required": [
          "assetState",
          "automaticTags",
          "checksum",
          "description",
          "dimensions",
          "downloadUrl",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "mimeType",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "smallPreviewLink": {
            "type": "string",
            "description": "Link to the image with the maximum width 400px",
            "nullable": true
          },
          "largePreviewLink": {
            "type": "string",
            "description": "Link to the image with the maximum width 1500px",
            "nullable": true
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "mimeType": {
            "minLength": 1,
            "type": "string"
          },
          "automaticTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags that are automatically generated based on the image"
          },
          "downloadUrl": {
            "type": "string",
            "description": "Generated temporary access URL for content downloading with 302 response code",
            "format": "uri"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of an image. E.g. \"folder-a/folder-b/_my-image\" when the location is \"Folder A > Folder B > My Image\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithPreviews"
          }
        },
        "additionalProperties": false
      },
      "Library": {
        "required": [
          "id",
          "libraryType",
          "name",
          "rootFolderId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique library identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 25,
            "minLength": 1,
            "type": "string",
            "description": "Display name of the library"
          },
          "libraryType": {
            "$ref": "#/components/schemas/LibraryType"
          },
          "spaceId": {
            "type": "integer",
            "description": "Unique identifier of the space to which the library belongs",
            "format": "int64"
          },
          "rootFolderId": {
            "type": "integer",
            "description": "Unique identifier of the root folder of the library",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "LibraryDetails": {
        "required": [
          "id",
          "libraryType",
          "name",
          "rootFolderId",
          "spaceId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique library identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 25,
            "minLength": 1,
            "type": "string",
            "description": "Display name of the library"
          },
          "libraryType": {
            "$ref": "#/components/schemas/LibraryType"
          },
          "spaceId": {
            "type": "integer",
            "description": "Unique identifier of the space to which the library belongs",
            "format": "int64"
          },
          "rootFolderId": {
            "type": "integer",
            "description": "Unique identifier of the root folder of the library",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "LibraryType": {
        "enum": [
          "documents",
          "presentations",
          "spreadsheets",
          "slides",
          "slide-elements",
          "text-elements",
          "images",
          "pdfs",
          "links",
          "email-elements"
        ],
        "type": "string",
        "description": "Type of the assets that can be stored in the library"
      },
      "Link": {
        "required": [
          "assetState",
          "description",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a link. E.g. \"folder-a/folder-b/_my-link\" when the location is \"Folder A > Folder B > My Link\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetStateWithoutFile"
          }
        },
        "additionalProperties": false
      },
      "LinkDetails": {
        "required": [
          "assetState",
          "description",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a link. E.g. \"folder-a/folder-b/_my-link\" when the location is \"Folder A > Folder B > My Link\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetStateWithoutFile"
          }
        },
        "additionalProperties": false
      },
      "NotFoundProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "example": {
          "title": "NotFound",
          "detail": "The server can not find the requested resource.",
          "status": 404,
          "traceId": "d61f7ce-cccb-4e5b-8727-3b68a61a0559"
        }
      },
      "Pdf": {
        "required": [
          "assetState",
          "checksum",
          "description",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a pdf. E.g. \"folder-a/folder-b/_my-pdf\" when the location is \"Folder A > Folder B > My Pdf\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
          }
        },
        "additionalProperties": false
      },
      "PdfDetails": {
        "required": [
          "assetState",
          "checksum",
          "description",
          "downloadUrl",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "downloadUrl": {
            "type": "string",
            "description": "Generated temporary access URL for content downloading with 302 response code",
            "format": "uri"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a pdf. E.g. \"folder-a/folder-b/_my-pdf\" when the location is \"Folder A > Folder B > My Pdf\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
          }
        },
        "additionalProperties": false
      },
      "Presentation": {
        "required": [
          "assetType",
          "description"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PresentationBase"
          }
        ],
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Type of the asset. It is always Presentation for this schema"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PresentationBase": {
        "required": [
          "assetState",
          "assetType",
          "checksum",
          "dimensions",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithPreviews"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a presentation. E.g. \"folder-a/folder-b/_my-presentation\" when the location is \"Folder A > Folder B > My Presentation\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "smallPreviewLink": {
            "type": "string",
            "description": "Link to the asset with the maximum width 400px",
            "nullable": true
          },
          "largePreviewLink": {
            "type": "string",
            "description": "Link to the asset with the maximum width 1500px",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PresentationDetails": {
        "required": [
          "assetType",
          "childrenAssetIds",
          "description",
          "downloadUrl"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PresentationDetailsBase"
          }
        ],
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Type of the asset. It is always Presentation for this schema"
          },
          "childrenAssetIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "The array of the identifiers of slides included in the presentation"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "downloadUrl": {
            "type": "string",
            "description": "Generated temporary access URL for content downloading with 302 response code",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "PresentationDetailsBase": {
        "required": [
          "assetState",
          "assetType",
          "checksum",
          "dimensions",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithPreviews"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a presentation. E.g. \"folder-a/folder-b/_my-presentation\" when the location is \"Folder A > Folder B > My Presentation\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "smallPreviewLink": {
            "type": "string",
            "description": "Link to the asset with the maximum width 400px",
            "nullable": true
          },
          "largePreviewLink": {
            "type": "string",
            "description": "Link to the asset with the maximum width 1500px",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PresentationSlide": {
        "required": [
          "assetType",
          "presentationId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PresentationBase"
          }
        ],
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Type of the asset. It is always Slide for this schema"
          },
          "presentationId": {
            "type": "integer",
            "description": "The identifier of the presentation to which a slide belongs",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PresentationSlideDetails": {
        "required": [
          "assetType",
          "presentationId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PresentationDetailsBase"
          }
        ],
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Type of the asset. It is always Slide for this schema"
          },
          "presentationId": {
            "type": "integer",
            "description": "The identifier of the presentation to which a slide belongs",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Slide": {
        "required": [
          "assetType",
          "slideDeckId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SlideBase"
          }
        ],
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Type of the asset. It is always Slide for this schema"
          },
          "slideDeckId": {
            "type": "integer",
            "description": "The identifier of the slide deck to which a slide belongs",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SlideBase": {
        "required": [
          "assetState",
          "assetType",
          "checksum",
          "dimensions",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithPreviews"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a slide. E.g. \"folder-a/folder-b/_my-slide\" when the location is \"Folder A > Folder B > My Slide\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "smallPreviewLink": {
            "type": "string",
            "description": "Link to the asset with the maximum width 400px",
            "nullable": true
          },
          "largePreviewLink": {
            "type": "string",
            "description": "Link to the asset with the maximum width 1500px",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SlideDeck": {
        "required": [
          "assetType",
          "description"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SlideBase"
          }
        ],
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Type of the asset. It is always SlideDeck for this schema"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SlideDeckDetails": {
        "required": [
          "assetType",
          "childrenAssetIds",
          "description",
          "downloadUrl"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SlideDetailsBase"
          }
        ],
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Type of the asset. It is always SlideDeck for this schema"
          },
          "childrenAssetIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "The array of the identifiers of slides included in the slide deck"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "downloadUrl": {
            "type": "string",
            "description": "Generated temporary access URL for content downloading with 302 response code",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "SlideDetails": {
        "required": [
          "assetType",
          "slideDeckId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SlideDetailsBase"
          }
        ],
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Type of the asset. It is always Slide for this schema"
          },
          "slideDeckId": {
            "type": "integer",
            "description": "The identifier of the slide deck to which a slide belongs",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SlideDetailsBase": {
        "required": [
          "assetState",
          "assetType",
          "checksum",
          "dimensions",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithPreviews"
          },
          "dimensions": {
            "$ref": "#/components/schemas/Dimensions"
          },
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a slide. E.g. \"folder-a/folder-b/_my-slide\" when the location is \"Folder A > Folder B > My Slide\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "smallPreviewLink": {
            "type": "string",
            "description": "Link to the asset with the maximum width 400px",
            "nullable": true
          },
          "largePreviewLink": {
            "type": "string",
            "description": "Link to the asset with the maximum width 1500px",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SlideElement": {
        "required": [
          "assetType",
          "slideElementDeckId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SlideElementBase"
          }
        ],
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Type of the asset. It is always SlideElement for this schema"
          },
          "slideElementDeckId": {
            "type": "integer",
            "description": "The identifier of the slide element deck to which a slide element belongs",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SlideElementBase": {
        "required": [
          "assetState",
          "assetType",
          "checksum",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithPreviews"
          },
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a slide element. E.g. \"folder-a/folder-b/_my-slide-element\" when the location is \"Folder A > Folder B > My Slide Element\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "smallPreviewLink": {
            "type": "string",
            "description": "Link to the asset with the maximum width 400px",
            "nullable": true
          },
          "largePreviewLink": {
            "type": "string",
            "description": "Link to the asset with the maximum width 1500px",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SlideElementDeck": {
        "required": [
          "assetType",
          "description"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SlideElementBase"
          }
        ],
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Type of the asset. It is always SlideElementDeck for this schema"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SlideElementDeckDetails": {
        "required": [
          "assetType",
          "childrenAssetIds",
          "description",
          "downloadUrl"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SlideElementDetailsBase"
          }
        ],
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Type of the asset. It is always SlideElementDeck for this schema"
          },
          "childrenAssetIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "The array of the identifiers of slide elements included in the slide element deck"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "downloadUrl": {
            "type": "string",
            "description": "Generated temporary access URL for content downloading with 302 response code",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "SlideElementDetails": {
        "required": [
          "assetType",
          "slideElementDeckId"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/SlideElementDetailsBase"
          }
        ],
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Type of the asset. It is always SlideElement for this schema"
          },
          "slideElementDeckId": {
            "type": "integer",
            "description": "The identifier of the slide element deck to which a slide element belongs",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SlideElementDetailsBase": {
        "required": [
          "assetState",
          "assetType",
          "checksum",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "assetType": {
            "minLength": 1,
            "type": "string"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithPreviews"
          },
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a slide element. E.g. \"folder-a/folder-b/_my-slide-element\" when the location is \"Folder A > Folder B > My Slide Element\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "smallPreviewLink": {
            "type": "string",
            "description": "Link to the asset with the maximum width 400px",
            "nullable": true
          },
          "largePreviewLink": {
            "type": "string",
            "description": "Link to the asset with the maximum width 1500px",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Spreadsheet": {
        "required": [
          "assetState",
          "checksum",
          "description",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a spreadsheet. E.g. \"folder-a/folder-b/_my-spreadsheet\" when the location is \"Folder A > Folder B > My Spreadsheet\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
          }
        },
        "additionalProperties": false
      },
      "SpreadsheetDetails": {
        "required": [
          "assetState",
          "checksum",
          "description",
          "downloadUrl",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "downloadUrl": {
            "type": "string",
            "description": "Generated temporary access URL for content downloading with 302 response code",
            "format": "uri"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a spreadsheet. E.g. \"folder-a/folder-b/_my-spreadsheet\" when the location is \"Folder A > Folder B > My Spreadsheet\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
          }
        },
        "additionalProperties": false
      },
      "TextElement": {
        "required": [
          "assetState",
          "checksum",
          "description",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a text element. E.g. \"folder-a/folder-b/_my-text-element\" when the location is \"Folder A > Folder B > My Text Element\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
          }
        },
        "additionalProperties": false
      },
      "TextElementDetails": {
        "required": [
          "assetState",
          "checksum",
          "description",
          "downloadUrl",
          "fileExtension",
          "fileSize",
          "folderId",
          "id",
          "modifiedAt",
          "name",
          "navigationPath",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique asset identifier",
            "format": "int64"
          },
          "folderId": {
            "type": "integer",
            "description": "Unique folder identifier",
            "format": "int64"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Display name"
          },
          "description": {
            "maxLength": 250,
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fileSize": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64"
          },
          "checksum": {
            "minLength": 1,
            "type": "string",
            "description": "MD5 checksum of the bytes"
          },
          "fileExtension": {
            "minLength": 1,
            "type": "string",
            "description": "Suffix to the name of the file"
          },
          "downloadUrl": {
            "type": "string",
            "description": "Generated temporary access URL for content downloading with 302 response code",
            "format": "uri"
          },
          "navigationPath": {
            "maxLength": 700,
            "minLength": 1,
            "type": "string",
            "description": "Hierarchical path in lowercase based on the location of a text element. E.g. \"folder-a/folder-b/_my-text-element\" when the location is \"Folder A > Folder B > My Text Element\""
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          },
          "modifiedAt": {
            "minLength": 1,
            "type": "string",
            "description": "Date and time in ISO 8601 format of when the asset was last modified"
          },
          "assetState": {
            "$ref": "#/components/schemas/AssetFileStateWithoutPreviews"
          }
        },
        "additionalProperties": false
      },
      "UpdateFolderRequest": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "type": "string",
            "description": "Display name",
            "nullable": true
          },
          "parentFolderId": {
            "type": "integer",
            "description": "The identifier of a folder that current folder should be moved to",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The request model to update the folder"
      },
      "UpdateLinkRequest": {
        "type": "object",
        "properties": {
          "folderId": {
            "type": "integer",
            "description": "The identifier of the destination folder",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "description": "A new display name of the asset",
            "nullable": true
          },
          "description": {
            "maxLength": 250,
            "type": "string",
            "description": "Description is used to specify the intended usage of the asset",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "maxLength": 1024,
              "minLength": 2,
              "type": "string"
            },
            "description": "Tags should describe the content of the asset making it easier for a user to locate it",
            "nullable": true
          },
          "url": {
            "maxLength": 2048,
            "type": "string",
            "description": "A reference to the web resource. HTTP and HTTPS are supported",
            "nullable": true
          },
          "externalData": {
            "maxLength": 100,
            "type": "string",
            "description": "External data which can be attached for future reference",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "example": {
          "errors": [
            {
              "name": "The name field is required"
            },
            {
              "data": "The input was invalid"
            }
          ],
          "title": "One or more validation errors occurred.",
          "status": 400,
          "traceId": "d61f7ce-cccb-4e5b-8727-3b68a61a0559"
        }
      },
      "ColorThemeFieldSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceFieldSchema"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ],
        "example": {
          "id": 6,
          "name": "PreferredColourTheme",
          "type": "colorTheme",
          "isRequired": false,
          "isLocked": false
        }
      },
      "CreateColorThemeDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataSourceItemFieldRequest"
          },
          {
            "required": [
              "xmlValue"
            ],
            "type": "object",
            "properties": {
              "xmlValue": {
                "maxLength": 3500,
                "minLength": 1,
                "type": "string",
                "description": "The value of the field based on the schema http://schemas.openxmlformats.org/drawingml/2006/main. Max length is 3500 characters."
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "type": "colorTheme",
          "dataSourceFieldId": 5,
          "xmlValue": "<a:clrScheme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Templafy_New\"><a:dk1><a:srgbClr val=\"0078FF\"/></a:dk1><a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1><a:dk2><a:srgbClr val=\"000000\"/></a:dk2><a:lt2><a:srgbClr val=\"E5E5E5\"/></a:lt2><a:accent1><a:srgbClr val=\"0078FF\"/></a:accent1><a:accent2><a:srgbClr val=\"575757\"/></a:accent2><a:accent3><a:srgbClr val=\"12AA96\"/></a:accent3><a:accent4><a:srgbClr val=\"15436B\"/></a:accent4><a:accent5><a:srgbClr val=\"D44849\"/></a:accent5><a:accent6><a:srgbClr val=\"7F7F7F\"/></a:accent6><a:hlink><a:srgbClr val=\"0078FF\"/></a:hlink><a:folHlink><a:srgbClr val=\"55CBFF\"/></a:folHlink></a:clrScheme>"
        }
      },
      "CreateDataSourceFieldSchemaRequest": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "minLength": 1,
            "type": "string",
            "description": "Data source field schema type."
          },
          "name": {
            "minLength": 1,
            "pattern": "^[A-Z][a-zA-Z0-9_-]*$",
            "type": "string",
            "description": "The name of the field. It must be unique within the data source."
          },
          "isRequired": {
            "type": "boolean",
            "description": "Whether the field is required. If true, the field must be filled in when creating a data source item."
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Text": "#/components/schemas/CreateTextFieldSchemaRequest",
            "Number": "#/components/schemas/CreateNumberFieldSchemaRequest",
            "Image": "#/components/schemas/CreateImageFieldSchemaRequest",
            "Reference": "#/components/schemas/CreateReferenceFieldSchemaRequest"
          }
        },
        "example": {
          "name": "History",
          "type": "text",
          "isMultipleLines": true,
          "defaultValue": "The city was established in the year 1652 by Dutch explorers...",
          "isRequired": false
        }
      },
      "CreateDataSourceItemFieldRequest": {
        "required": [
          "dataSourceFieldId",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "minLength": 1,
            "type": "string",
            "description": "Data source item field type.",
            "readOnly": true
          },
          "dataSourceFieldId": {
            "type": "integer",
            "description": "Data source field identifier.",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Text": "#/components/schemas/CreateTextDataSourceItemFieldRequest",
            "Number": "#/components/schemas/CreateNumberDataSourceItemFieldRequest",
            "Reference": "#/components/schemas/CreateReferenceDataSourceItemFieldRequest",
            "Image": "#/components/schemas/CreateImageDataSourceItemFieldRequest",
            "Font": "#/components/schemas/CreateFontDataSourceItemFieldRequest",
            "ColorTheme": "#/components/schemas/CreateColorThemeDataSourceItemFieldRequest"
          }
        }
      },
      "CreateDataSourceItemRequest": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CreateTextDataSourceItemFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/CreateNumberDataSourceItemFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/CreateReferenceDataSourceItemFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/CreateImageDataSourceItemFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/CreateFontDataSourceItemFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/CreateColorThemeDataSourceItemFieldRequest"
                }
              ]
            },
            "description": "The fields of the data source item.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "example": {
          "fields": [
            {
              "dataSourceFieldId": 0,
              "type": "text",
              "value": "Sample text"
            },
            {
              "dataSourceFieldId": 1,
              "type": "number",
              "value": 123.45
            },
            {
              "dataSourceFieldId": 2,
              "type": "reference",
              "dataSourceItemId": "638247997437572264"
            },
            {
              "dataSourceFieldId": 3,
              "type": "image",
              "fileName": "Cat",
              "fileUrl": "https://en.wikipedia.org/wiki/Cat#/media/File:Cat_August_2010-4.jpg"
            },
            {
              "dataSourceFieldId": 4,
              "type": "font",
              "fileName": "best-font",
              "fileUrl": "https://allfonts.com/best-font"
            },
            {
              "dataSourceFieldId": 5,
              "type": "colorTheme",
              "xmlValue": "<a:clrScheme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Templafy_New\"><a:dk1><a:srgbClr val=\"0078FF\"/></a:dk1><a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1><a:dk2><a:srgbClr val=\"000000\"/></a:dk2><a:lt2><a:srgbClr val=\"E5E5E5\"/></a:lt2><a:accent1><a:srgbClr val=\"0078FF\"/></a:accent1><a:accent2><a:srgbClr val=\"575757\"/></a:accent2><a:accent3><a:srgbClr val=\"12AA96\"/></a:accent3><a:accent4><a:srgbClr val=\"15436B\"/></a:accent4><a:accent5><a:srgbClr val=\"D44849\"/></a:accent5><a:accent6><a:srgbClr val=\"7F7F7F\"/></a:accent6><a:hlink><a:srgbClr val=\"0078FF\"/></a:hlink><a:folHlink><a:srgbClr val=\"55CBFF\"/></a:folHlink></a:clrScheme>"
            }
          ]
        }
      },
      "CreateDataSourceRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[A-Z][a-zA-Z0-9_-]*$",
            "type": "string",
            "description": "The name of the data source. It must be unique. Max length is 100 characters."
          },
          "description": {
            "type": "string",
            "description": "The description of the data source.",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CreateTextFieldSchemaRequest"
                },
                {
                  "$ref": "#/components/schemas/CreateNumberFieldSchemaRequest"
                },
                {
                  "$ref": "#/components/schemas/CreateImageFieldSchemaRequest"
                },
                {
                  "$ref": "#/components/schemas/CreateReferenceFieldSchemaRequest"
                }
              ],
              "example": {
                "name": "History",
                "type": "text",
                "isMultipleLines": true,
                "defaultValue": "The city was established in the year 1652 by Dutch explorers...",
                "isRequired": false
              }
            },
            "description": "The fields of the data source. If not specified, the data source will be created without fields.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "example": {
          "name": "Cities",
          "description": "Cities in which we have offices",
          "fields": [
            {
              "name": "History",
              "type": "text",
              "isMultipleLines": true,
              "defaultValue": "The city was established in the year 1652 by Dutch explorers...",
              "isRequired": false
            },
            {
              "name": "Population",
              "type": "number",
              "defaultValue": 100222,
              "isRequired": true
            },
            {
              "name": "Country",
              "type": "reference",
              "referenceDataSourceId": "637989101951089955",
              "defaultReferencedItemId": "638249311425155568",
              "isRequired": true
            },
            {
              "name": "Flag",
              "type": "image",
              "isRequired": true
            }
          ]
        }
      },
      "CreateFontDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataSourceItemFieldRequest"
          },
          {
            "required": [
              "fileName"
            ],
            "type": "object",
            "properties": {
              "fileName": {
                "minLength": 1,
                "type": "string",
                "description": "The name of the file."
              },
              "fileUrl": {
                "type": "string",
                "description": "The file size must be under 2MB, and it should be in one of these formats: .ttf, .otf.",
                "format": "uri",
                "nullable": true
              },
              "content": {
                "type": "string",
                "description": "The base64 content size must be under 2MB, and it should be in one of these formats: .ttf, .otf.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "type": "font",
          "dataSourceFieldId": 4,
          "fileName": "best-font",
          "fileUrl": "https://allfonts.com/best-font"
        }
      },
      "CreateImageDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataSourceItemFieldRequest"
          },
          {
            "required": [
              "fileName"
            ],
            "type": "object",
            "properties": {
              "fileName": {
                "minLength": 1,
                "type": "string",
                "description": "The name of the file."
              },
              "fileUrl": {
                "type": "string",
                "description": "The file size must be under 2MB, and it should be in one of these formats: .png, .jpg, .jpeg, .gif, .bmp, .emf, .wmf, .svg.",
                "format": "uri",
                "nullable": true
              },
              "content": {
                "type": "string",
                "description": "The base64 content size must be under 2MB, and it should be in one of these formats: .png, .jpg, .jpeg, .gif, .bmp, .emf, .wmf, .svg.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "type": "image",
          "dataSourceFieldId": 3,
          "fileName": "Cat",
          "fileUrl": "https://en.wikipedia.org/wiki/Cat#/media/File:Cat_August_2010-4.jpg"
        }
      },
      "CreateImageFieldSchemaRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataSourceFieldSchemaRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ],
        "example": {
          "name": "Flag",
          "type": "image",
          "isRequired": true
        }
      },
      "CreateNumberDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataSourceItemFieldRequest"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "The value of the field with the precision of 2 decimal places.",
                "format": "double"
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "type": "number",
          "dataSourceFieldId": 1,
          "value": 123.45
        }
      },
      "CreateNumberFieldSchemaRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataSourceFieldSchemaRequest"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "type": "number",
                "description": "The default value of the field. If specified, the field will be pre-filled with this value when creating a data source item.",
                "format": "double",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "name": "Population",
          "type": "number",
          "defaultValue": 100222,
          "isRequired": true
        }
      },
      "CreateReferenceDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataSourceItemFieldRequest"
          },
          {
            "required": [
              "dataSourceItemId"
            ],
            "type": "object",
            "properties": {
              "dataSourceItemId": {
                "type": "integer",
                "description": "The identifier of the data source item to be referenced.",
                "format": "int64"
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 2,
          "type": "reference",
          "dataSourceItemId": "638247997437572264"
        }
      },
      "CreateReferenceFieldSchemaRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataSourceFieldSchemaRequest"
          },
          {
            "required": [
              "referenceDataSourceId"
            ],
            "type": "object",
            "properties": {
              "referenceDataSourceId": {
                "type": "integer",
                "description": "The id of the data source that the field references.",
                "format": "int64"
              },
              "defaultReferencedItemId": {
                "type": "integer",
                "description": "The default value of the field. If specified, the field will be pre-filled with this value when creating a data source item.",
                "format": "int64",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "name": "Country",
          "type": "reference",
          "referenceDataSourceId": "637989101951089955",
          "defaultReferencedItemId": "638249311425155568",
          "isRequired": true
        }
      },
      "CreateTextDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataSourceItemFieldRequest"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "maxLength": 8000,
                "type": "string",
                "description": "Text data source item field value. Max length is 8000 characters.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "type": "text",
          "dataSourceFieldId": 0,
          "value": "Sample text"
        }
      },
      "CreateTextFieldSchemaRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDataSourceFieldSchemaRequest"
          },
          {
            "type": "object",
            "properties": {
              "isMultipleLines": {
                "type": "boolean",
                "description": "Whether the field is multiple lines. If true, the field will be rendered as a text area."
              },
              "defaultValue": {
                "type": "string",
                "description": "The default value of the field. If specified, the field will be pre-filled with this value when creating a data source item.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "name": "History",
          "type": "text",
          "isMultipleLines": true,
          "defaultValue": "The city was established in the year 1652 by Dutch explorers...",
          "isRequired": false
        }
      },
      "DataSource": {
        "required": [
          "fields",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique data source identifier.",
            "format": "int64"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Data source name. It must be unique."
          },
          "description": {
            "type": "string",
            "description": "Data source description.",
            "nullable": true
          },
          "fields": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TextFieldSchema"
                },
                {
                  "$ref": "#/components/schemas/NumberFieldSchema"
                },
                {
                  "$ref": "#/components/schemas/ReferenceFieldSchema"
                },
                {
                  "$ref": "#/components/schemas/ImageFieldSchema"
                },
                {
                  "$ref": "#/components/schemas/LanguageFieldSchema"
                },
                {
                  "$ref": "#/components/schemas/FontFieldSchema"
                },
                {
                  "$ref": "#/components/schemas/ColorThemeFieldSchema"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "example": {
          "id": "638247997499047080",
          "name": "Cities",
          "description": "Cities in which we have offices",
          "fields": [
            {
              "id": 0,
              "name": "Name",
              "type": "text",
              "isRequired": true,
              "isLocked": true,
              "isMultipleLines": false
            },
            {
              "id": 1,
              "name": "History",
              "type": "text",
              "isRequired": false,
              "isLocked": false,
              "isMultipleLines": true,
              "defaultValue": "The city was established in the year 1652 by Dutch explorers..."
            },
            {
              "id": 2,
              "name": "Population",
              "type": "number",
              "isRequired": true,
              "isLocked": false,
              "defaultValue": 100222
            },
            {
              "id": 3,
              "name": "Country",
              "type": "reference",
              "isRequired": true,
              "isLocked": false,
              "defaultValue": "638247997437572266",
              "referenceDataSourceId": "638247997437572264"
            },
            {
              "id": 4,
              "name": "Flag",
              "type": "image",
              "isRequired": false,
              "isLocked": false
            },
            {
              "id": 5,
              "name": "PreferredLanguage",
              "type": "language",
              "isRequired": false,
              "isLocked": false,
              "defaultValue": "German"
            },
            {
              "id": 6,
              "name": "PreferredFont",
              "type": "font",
              "isRequired": false,
              "isLocked": false
            },
            {
              "id": 7,
              "name": "PreferredColourTheme",
              "type": "colorTheme",
              "isRequired": false,
              "isLocked": false
            }
          ]
        }
      },
      "DataSourceColorThemeItemField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceItemField"
          },
          {
            "type": "object",
            "properties": {
              "xmlValue": {
                "type": "string",
                "description": "The value of the field based on the schema http://schemas.openxmlformats.org/drawingml/2006/main.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 5,
          "type": "colorTheme",
          "xmlValue": "<a:clrScheme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Templafy_New\"><a:dk1><a:srgbClr val=\"0078FF\"/></a:dk1><a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1><a:dk2><a:srgbClr val=\"000000\"/></a:dk2><a:lt2><a:srgbClr val=\"E5E5E5\"/></a:lt2><a:accent1><a:srgbClr val=\"0078FF\"/></a:accent1><a:accent2><a:srgbClr val=\"575757\"/></a:accent2><a:accent3><a:srgbClr val=\"12AA96\"/></a:accent3><a:accent4><a:srgbClr val=\"15436B\"/></a:accent4><a:accent5><a:srgbClr val=\"D44849\"/></a:accent5><a:accent6><a:srgbClr val=\"7F7F7F\"/></a:accent6><a:hlink><a:srgbClr val=\"0078FF\"/></a:hlink><a:folHlink><a:srgbClr val=\"55CBFF\"/></a:folHlink></a:clrScheme>"
        }
      },
      "DataSourceFieldSchema": {
        "required": [
          "id",
          "isLocked",
          "isRequired",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "minLength": 1,
            "type": "string",
            "description": "Data source field schema type.",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "Unique data source field schema identifier",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Data source field schema name. It must be unique within the data source.",
            "readOnly": true
          },
          "isLocked": {
            "type": "boolean",
            "description": "Value indicating whether data source schema is locked. If true, the field cannot be deleted or modified.",
            "readOnly": true
          },
          "isRequired": {
            "type": "boolean",
            "description": "Whether the field is required. If true, the field must be filled in when creating a data source item.",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Text": "#/components/schemas/TextFieldSchema",
            "Number": "#/components/schemas/NumberFieldSchema",
            "Reference": "#/components/schemas/ReferenceFieldSchema",
            "Image": "#/components/schemas/ImageFieldSchema",
            "Language": "#/components/schemas/LanguageFieldSchema",
            "Font": "#/components/schemas/FontFieldSchema",
            "ColorTheme": "#/components/schemas/ColorThemeFieldSchema"
          }
        }
      },
      "DataSourceFontItemField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceItemField"
          },
          {
            "type": "object",
            "properties": {
              "fileName": {
                "type": "string",
                "description": "Font item field file name.",
                "nullable": true
              },
              "fileUrl": {
                "type": "string",
                "description": "The file size must be under 2MB, and it should be in one of these formats: .ttf, .otf.",
                "format": "uri",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 3,
          "type": "font",
          "fileName": "best-font",
          "fileUrl": "https://allfonts.com/best-font"
        }
      },
      "DataSourceImageItemField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceItemField"
          },
          {
            "type": "object",
            "properties": {
              "fileName": {
                "type": "string",
                "description": "The name of the file.",
                "nullable": true
              },
              "fileUrl": {
                "type": "string",
                "description": "The file size must be under 2MB, and it should be in one of these formats: .png, .jpg, .jpeg, .gif, .bmp, .emf, .wmf, .svg.",
                "format": "uri",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 2,
          "type": "image",
          "fileName": "Cat",
          "fileUrl": "https://en.wikipedia.org/wiki/Cat#/media/File:Cat_August_2010-4.jpg"
        }
      },
      "DataSourceItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique data source item identifier.",
            "format": "int64"
          },
          "fields": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DataSourceTextItemField"
                },
                {
                  "$ref": "#/components/schemas/DataSourceNumberItemField"
                },
                {
                  "$ref": "#/components/schemas/DataSourceReferenceItemField"
                },
                {
                  "$ref": "#/components/schemas/DataSourceImageItemField"
                },
                {
                  "$ref": "#/components/schemas/DataSourceLanguageItemField"
                },
                {
                  "$ref": "#/components/schemas/DataSourceFontItemField"
                },
                {
                  "$ref": "#/components/schemas/DataSourceColorThemeItemField"
                }
              ]
            },
            "description": "The fields of the data source item.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "example": {
          "id": 638247997470215700,
          "fields": [
            {
              "type": "text",
              "dataSourceFieldId": 0,
              "value": "Sample text"
            },
            {
              "type": "number",
              "dataSourceFieldId": 1,
              "value": 123.4
            },
            {
              "type": "reference",
              "dataSourceFieldId": 2,
              "value": "638248473165588903"
            },
            {
              "type": "image",
              "dataSourceFieldId": 3,
              "fileName": "Cat",
              "fileUrl": "https://en.wikipedia.org/wiki/Cat#/media/File:Cat_August_2010-4.jpg"
            },
            {
              "type": "font",
              "dataSourceFieldId": 4,
              "fileName": "best-font",
              "fileUrl": "https://allfonts.com/best-font"
            },
            {
              "type": "colorTheme",
              "dataSourceFieldId": 5,
              "xmlValue": "<a:clrScheme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Templafy_New\"><a:dk1><a:srgbClr val=\"0078FF\"/></a:dk1><a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1><a:dk2><a:srgbClr val=\"000000\"/></a:dk2><a:lt2><a:srgbClr val=\"E5E5E5\"/></a:lt2><a:accent1><a:srgbClr val=\"0078FF\"/></a:accent1><a:accent2><a:srgbClr val=\"575757\"/></a:accent2><a:accent3><a:srgbClr val=\"12AA96\"/></a:accent3><a:accent4><a:srgbClr val=\"15436B\"/></a:accent4><a:accent5><a:srgbClr val=\"D44849\"/></a:accent5><a:accent6><a:srgbClr val=\"7F7F7F\"/></a:accent6><a:hlink><a:srgbClr val=\"0078FF\"/></a:hlink><a:folHlink><a:srgbClr val=\"55CBFF\"/></a:folHlink></a:clrScheme>"
            },
            {
              "type": "language",
              "dataSourceFieldId": 6,
              "cultureName": "en-GB"
            }
          ]
        }
      },
      "DataSourceItemField": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Data source item field type.",
            "nullable": true,
            "readOnly": true
          },
          "dataSourceFieldId": {
            "type": "integer",
            "description": "Unique data source field identifier.",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Text": "#/components/schemas/DataSourceTextItemField",
            "Number": "#/components/schemas/DataSourceNumberItemField",
            "Reference": "#/components/schemas/DataSourceReferenceItemField",
            "Image": "#/components/schemas/DataSourceImageItemField",
            "Language": "#/components/schemas/DataSourceLanguageItemField",
            "Font": "#/components/schemas/DataSourceFontItemField",
            "ColorTheme": "#/components/schemas/DataSourceColorThemeItemField"
          }
        }
      },
      "DataSourceLanguageItemField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceItemField"
          },
          {
            "type": "object",
            "properties": {
              "cultureName": {
                "type": "string",
                "description": "Language item field culture name.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 6,
          "type": "language",
          "cultureName": "en-GB"
        }
      },
      "DataSourceNumberItemField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceItemField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "The value of the field with the precision of 2 decimal places.",
                "format": "double"
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 1,
          "type": "number",
          "value": 123.45
        }
      },
      "DataSourceObjectLockedProblemDetails": {
        "type": "object",
        "properties": {
          "lockReason": {
            "$ref": "#/components/schemas/LockReason"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dependency"
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The reason the resource is locked with an optional array of dependencies. Dependencies array is populated only when lockedReason is hardDependency and contains a maximum of 50 items per sourceEntityType",
        "example": {
          "title": "Locked",
          "detail": "The data source item cannot be deleted because it has been used by another resource.",
          "status": 423,
          "traceId": "d61f7ce-cccb-4e5b-8727-3b68a61a0559",
          "lockReason": "hardDependency",
          "dependencies": [
            {
              "sourceEntityType": "dataSourceItem",
              "sourceEntityId": "1031936131644784655",
              "description": "There is a dependency from 'DataSourceItem'."
            }
          ]
        }
      },
      "DataSourceReferenceItemField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceItemField"
          },
          {
            "type": "object",
            "properties": {
              "dataSourceItemId": {
                "type": "integer",
                "description": "The identifier of the data source item to be referenced.",
                "format": "int64"
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 4,
          "type": "reference",
          "dataSourceItemId": "638247997437572264"
        }
      },
      "DataSourceTextItemField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceItemField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "description": "Text data source item field value.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 0,
          "type": "text",
          "value": "Sample text"
        }
      },
      "Dependency": {
        "type": "object",
        "properties": {
          "sourceEntityType": {
            "$ref": "#/components/schemas/SourceEntityType"
          },
          "sourceEntityId": {
            "type": "string",
            "description": "The id of the dependency source.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Human readable description of the source type.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The model describing a dependency."
      },
      "FontFieldSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceFieldSchema"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ],
        "example": {
          "id": 5,
          "name": "PreferredFont",
          "type": "font",
          "isRequired": false,
          "isLocked": false
        }
      },
      "ImageFieldSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceFieldSchema"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ],
        "example": {
          "id": 2,
          "name": "Logo",
          "type": "image",
          "isRequired": false,
          "isLocked": false
        }
      },
      "LanguageFieldSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceFieldSchema"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "type": "string",
                "description": "The default value of the field. If specified, the field will be pre-filled with this value when creating a data source item.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "id": 4,
          "name": "PreferredLanguage",
          "type": "language",
          "isRequired": false,
          "isLocked": false,
          "defaultValue": "German"
        }
      },
      "LockReason": {
        "enum": [
          "hardDependency",
          "restrictedAccess"
        ],
        "type": "string",
        "description": "The reason the resource is locked. It is either because the resource is depended upon by another resource or the resource has restricted access and cannot be modified."
      },
      "NumberFieldSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceFieldSchema"
          },
          {
            "type": "object",
            "properties": {
              "defaultValue": {
                "type": "number",
                "description": "The default value of the field. If specified, the field will be pre-filled with this value when creating a data source item.",
                "format": "double",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "id": 1,
          "name": "NumberOfOffices",
          "type": "number",
          "isRequired": true,
          "isLocked": false,
          "defaultValue": 1
        }
      },
      "PatchColorThemeDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PatchDataSourceItemFieldRequest"
          },
          {
            "required": [
              "xmlValue"
            ],
            "type": "object",
            "properties": {
              "xmlValue": {
                "maxLength": 3500,
                "minLength": 1,
                "type": "string",
                "description": "The value of the field based on the schema http://schemas.openxmlformats.org/drawingml/2006/main. Max length is 3500 characters."
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 5,
          "type": "colorTheme",
          "xmlValue": "<a:clrScheme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Templafy_New\"><a:dk1><a:srgbClr val=\"0078FF\"/></a:dk1><a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1><a:dk2><a:srgbClr val=\"000000\"/></a:dk2><a:lt2><a:srgbClr val=\"E5E5E5\"/></a:lt2><a:accent1><a:srgbClr val=\"0078FF\"/></a:accent1><a:accent2><a:srgbClr val=\"575757\"/></a:accent2><a:accent3><a:srgbClr val=\"12AA96\"/></a:accent3><a:accent4><a:srgbClr val=\"15436B\"/></a:accent4><a:accent5><a:srgbClr val=\"D44849\"/></a:accent5><a:accent6><a:srgbClr val=\"7F7F7F\"/></a:accent6><a:hlink><a:srgbClr val=\"0078FF\"/></a:hlink><a:folHlink><a:srgbClr val=\"55CBFF\"/></a:folHlink></a:clrScheme>"
        }
      },
      "PatchDataSourceFieldRequest": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "pattern": "^[A-Z][a-zA-Z0-9_-]*$",
            "type": "string",
            "description": "The name of the field. It must be unique within the data source.",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean",
            "description": "Whether the field is required. If true, the field must be filled in when creating a data source item.",
            "nullable": true
          },
          "isMultipleLines": {
            "type": "boolean",
            "description": "Whether the field is multiple lines. If true, the field will be rendered as a text area.",
            "nullable": true
          },
          "defaultValue": {
            "type": "string",
            "description": "The default value of the field. If specified, the field will be pre-filled with this value when creating a data source item.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "example": {
          "name": "Population",
          "isRequired": true,
          "defaultValue": 130000
        }
      },
      "PatchDataSourceItemFieldRequest": {
        "required": [
          "dataSourceFieldId",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "minLength": 1,
            "type": "string",
            "description": "Data source item field type.",
            "readOnly": true
          },
          "dataSourceFieldId": {
            "type": "integer",
            "description": "The identifier of the field to be updated.",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Text": "#/components/schemas/PatchTextDataSourceItemFieldRequest",
            "Number": "#/components/schemas/PatchNumberDataSourceItemFieldRequest",
            "Image": "#/components/schemas/PatchImageDataSourceItemFieldRequest",
            "Reference": "#/components/schemas/PatchReferenceDataSourceItemFieldRequest",
            "Font": "#/components/schemas/PatchFontDataSourceItemFieldRequest",
            "ColorTheme": "#/components/schemas/PatchColorThemeDataSourceItemFieldRequest"
          }
        }
      },
      "PatchDataSourceItemRequest": {
        "required": [
          "fields"
        ],
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/PatchTextDataSourceItemFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/PatchNumberDataSourceItemFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/PatchImageDataSourceItemFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/PatchReferenceDataSourceItemFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/PatchFontDataSourceItemFieldRequest"
                },
                {
                  "$ref": "#/components/schemas/PatchColorThemeDataSourceItemFieldRequest"
                }
              ]
            },
            "description": "The fields of the data source item."
          }
        },
        "additionalProperties": false
      },
      "PatchFontDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PatchDataSourceItemFieldRequest"
          },
          {
            "required": [
              "fileName"
            ],
            "type": "object",
            "properties": {
              "fileName": {
                "minLength": 1,
                "type": "string",
                "description": "The name of the file."
              },
              "fileUrl": {
                "type": "string",
                "description": "The file size must be under 2MB, and it should be in one of these formats: .ttf, .otf.",
                "format": "uri",
                "nullable": true
              },
              "content": {
                "type": "string",
                "description": "The base64 content size must be under 2MB, and it should be in one of these formats: .ttf, .otf.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 3,
          "type": "font",
          "fileName": "best-font",
          "fileUrl": "https://allfonts.com/best-font"
        }
      },
      "PatchImageDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PatchDataSourceItemFieldRequest"
          },
          {
            "required": [
              "fileName"
            ],
            "type": "object",
            "properties": {
              "fileName": {
                "minLength": 1,
                "type": "string",
                "description": "The name of the file."
              },
              "fileUrl": {
                "type": "string",
                "description": "The file size must be under 2MB, and it should be in one of these formats: .png, .jpg, .jpeg, .gif, .bmp, .emf, .wmf, .svg.",
                "format": "uri",
                "nullable": true
              },
              "content": {
                "type": "string",
                "description": "The base64 content size must be under 2MB, and it should be in one of these formats: .png, .jpg, .jpeg, .gif, .bmp, .emf, .wmf, .svg.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 2,
          "type": "image",
          "fileName": "Cat",
          "fileUrl": "https://en.wikipedia.org/wiki/Cat#/media/File:Cat_August_2010-4.jpg"
        }
      },
      "PatchNumberDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PatchDataSourceItemFieldRequest"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "The value of the field with the precision of 2 decimal places.",
                "format": "double"
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 1,
          "type": "number",
          "value": 123.45
        }
      },
      "PatchReferenceDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PatchDataSourceItemFieldRequest"
          },
          {
            "required": [
              "dataSourceItemId"
            ],
            "type": "object",
            "properties": {
              "dataSourceItemId": {
                "type": "integer",
                "description": "The identifier of the data source item to be referenced.",
                "format": "int64"
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 4,
          "type": "reference",
          "dataSourceItemId": "638247997437572264"
        }
      },
      "PatchTextDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PatchDataSourceItemFieldRequest"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "maxLength": 8000,
                "type": "string",
                "description": "Text data source item field value. Max length is 8000 characters.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "dataSourceFieldId": 0,
          "type": "text",
          "value": "An updated value"
        }
      },
      "ReferenceFieldSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceFieldSchema"
          },
          {
            "required": [
              "referenceDataSourceId"
            ],
            "type": "object",
            "properties": {
              "referenceDataSourceId": {
                "type": "integer",
                "description": "The id of the data source that the field references.",
                "format": "int64"
              },
              "defaultValue": {
                "type": "integer",
                "description": "The default value of the field. If specified, the field will be pre-filled with this value when creating a data source item.",
                "format": "int64",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "id": 3,
          "name": "Region",
          "type": "reference",
          "isRequired": true,
          "isLocked": false,
          "defaultValue": "638247997437572266",
          "referenceDataSourceId": "638247997437572264"
        }
      },
      "SourceEntityType": {
        "enum": [
          "dataSource",
          "dataSourceItem",
          "other"
        ],
        "type": "string"
      },
      "TextFieldSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSourceFieldSchema"
          },
          {
            "required": [
              "isMultipleLines"
            ],
            "type": "object",
            "properties": {
              "isMultipleLines": {
                "type": "boolean",
                "description": "Whether the field is multiple lines. If true, the field will be rendered as a text area."
              },
              "defaultValue": {
                "type": "string",
                "description": "The default value of the field. If specified, the field will be pre-filled with this value when creating a data source item.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "id": 1,
          "name": "History",
          "type": "text",
          "isRequired": true,
          "isLocked": false,
          "isMultipleLines": false,
          "defaultValue": "The city was established in the year 1652 by Dutch explorers..."
        }
      },
      "UpdateColorThemeDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateDataSourceItemFieldRequest"
          },
          {
            "required": [
              "xmlValue"
            ],
            "type": "object",
            "properties": {
              "xmlValue": {
                "maxLength": 3500,
                "minLength": 1,
                "type": "string",
                "description": "The value of the field based on the schema http://schemas.openxmlformats.org/drawingml/2006/main. Max length is 3500 characters."
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "type": "colorTheme",
          "xmlValue": "<a:clrScheme xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" name=\"Templafy_New\"><a:dk1><a:srgbClr val=\"0078FF\"/></a:dk1><a:lt1><a:sysClr val=\"window\" lastClr=\"FFFFFF\"/></a:lt1><a:dk2><a:srgbClr val=\"000000\"/></a:dk2><a:lt2><a:srgbClr val=\"E5E5E5\"/></a:lt2><a:accent1><a:srgbClr val=\"0078FF\"/></a:accent1><a:accent2><a:srgbClr val=\"575757\"/></a:accent2><a:accent3><a:srgbClr val=\"12AA96\"/></a:accent3><a:accent4><a:srgbClr val=\"15436B\"/></a:accent4><a:accent5><a:srgbClr val=\"D44849\"/></a:accent5><a:accent6><a:srgbClr val=\"7F7F7F\"/></a:accent6><a:hlink><a:srgbClr val=\"0078FF\"/></a:hlink><a:folHlink><a:srgbClr val=\"55CBFF\"/></a:folHlink></a:clrScheme>"
        }
      },
      "UpdateDataSourceItemFieldRequest": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "minLength": 1,
            "type": "string",
            "description": "Data source item field type.",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Text": "#/components/schemas/UpdateTextDataSourceItemFieldRequest",
            "Number": "#/components/schemas/UpdateNumberDataSourceItemFieldRequest",
            "ColorTheme": "#/components/schemas/UpdateColorThemeDataSourceItemFieldRequest",
            "Reference": "#/components/schemas/UpdateReferenceDataSourceItemFieldRequest",
            "Image": "#/components/schemas/UpdateImageDataSourceItemFieldRequest",
            "Font": "#/components/schemas/UpdateFontDataSourceItemFieldRequest"
          }
        },
        "example": {
          "type": "text",
          "value": "An updated value"
        }
      },
      "UpdateDataSourceRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Data source description. If null, description will be removed.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "example": {
          "description": "This is an updated description"
        }
      },
      "UpdateFontDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateDataSourceItemFieldRequest"
          },
          {
            "required": [
              "fileName"
            ],
            "type": "object",
            "properties": {
              "fileName": {
                "minLength": 1,
                "type": "string",
                "description": "The name of the file."
              },
              "fileUrl": {
                "type": "string",
                "description": "The file size must be under 2MB, and it should be in one of these formats: .ttf, .otf.",
                "format": "uri",
                "nullable": true
              },
              "content": {
                "type": "string",
                "description": "The base64 content size must be under 2MB, and it should be in one of these formats: .ttf, .otf.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "type": "font",
          "fileName": "best-font",
          "fileUrl": "https://allfonts.com/best-font"
        }
      },
      "UpdateImageDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateDataSourceItemFieldRequest"
          },
          {
            "required": [
              "fileName"
            ],
            "type": "object",
            "properties": {
              "fileName": {
                "minLength": 1,
                "type": "string",
                "description": "The name of the file."
              },
              "fileUrl": {
                "type": "string",
                "description": "The file size must be under 2MB, and it should be in one of these formats: .png, .jpg, .jpeg, .gif, .bmp, .emf, .wmf, .svg.",
                "format": "uri",
                "nullable": true
              },
              "content": {
                "type": "string",
                "description": "The base64 content size must be under 2MB, and it should be in one of these formats: .png, .jpg, .jpeg, .gif, .bmp, .emf, .wmf, .svg.",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "type": "image",
          "fileName": "Cat",
          "fileUrl": "https://en.wikipedia.org/wiki/Cat#/media/File:Cat_August_2010-4.jpg"
        }
      },
      "UpdateNumberDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateDataSourceItemFieldRequest"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "description": "The value of the field with the precision of 2 decimal places.",
                "format": "double"
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "type": "number",
          "value": 123.45
        }
      },
      "UpdateReferenceDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateDataSourceItemFieldRequest"
          },
          {
            "required": [
              "dataSourceItemId"
            ],
            "type": "object",
            "properties": {
              "dataSourceItemId": {
                "type": "integer",
                "description": "The identifier of the data source item to be referenced.",
                "format": "int64"
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "type": "reference",
          "dataSourceItemId": "638247997437572264"
        }
      },
      "UpdateTextDataSourceItemFieldRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateDataSourceItemFieldRequest"
          },
          {
            "required": [
              "value"
            ],
            "type": "object",
            "properties": {
              "value": {
                "maxLength": 8000,
                "minLength": 1,
                "type": "string",
                "description": "Text data source item field value. Max length is 8000 characters."
              }
            },
            "additionalProperties": false
          }
        ],
        "example": {
          "type": "text",
          "value": "An updated value"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API Key"
      }
    }
  }
}
